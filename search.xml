<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>疫苗</title>
      <link href="/2018-07-30-Vaccin/"/>
      <url>/2018-07-30-Vaccin/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 屠夫问心无愧: 别人的孩子, 不是我的孩子.  </blockquote><a id="more"></a><h2 id="疫苗">疫苗</h2><p>解脱?留恋?不舍?<br>失望?痛哭?嚎啕?</p><p>滚烫泪珠<br>注入冰冷针头.<br>坚硬匕首<br>刺痛温软娇血.</p><p>失明的凶手<br>丢了心声.<br>看不见凶手,<br>带走心跳.</p><p>初阳垂下眼睑.<br>黑夜静悄悄,<br>遗忘.</p><p>屠夫问心无愧:<br>别人的孩子,<br>不是我的孩子.</p><p><code>注</code> : 看见孩子无辜噙泪的眼睛,有感而发.</p><h2 id="tl">TL</h2><ul><li>180730 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Regex Python re module</title>
      <link href="/2018-07-29-PythonRegex/"/>
      <url>/2018-07-29-PythonRegex/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> python regex matachar  </blockquote><a id="more"></a><h1>正则表达式</h1><p>~<a href="https://book.douban.com/subject/2154713/" target="_blank" rel="noopener">精通正则表达式 (豆瓣)</a></p><h2 id="术语">术语</h2><ul><li>regex 正则</li><li>matching 匹配</li><li>metacharacter 元字符</li><li>flavor 流派</li><li>subexpression 子表达式</li><li>character 字符</li></ul><h2 id="识别对象">识别对象</h2><ul><li>行</li><li>字符</li></ul><h1>Python re 模块</h1><p>~ <a href="https://docs.python.org/3.6/library/re.html#re.sub" target="_blank" rel="noopener">6.2. re — Regular expression operations — Python 3.6.6 documentation</a></p><ul><li><p>Q python 中正则表达式<code>re</code>模块元字符的含义</p></li><li><p>NO flag</p><ul><li>default mode</li></ul></li><li><p>flag</p><ul><li><a href="https://docs.python.org/3.6/library/re.html#re.DOTALL" target="_blank" rel="noopener">DOTALL</a></li><li><a href="https://docs.python.org/3.6/library/re.html#re.MULTILINE" target="_blank" rel="noopener">MULTILINE</a></li></ul></li><li><p>O Default 应该就够用了...</p></li></ul><h2 id="basic-matachar">Basic matachar</h2><ul><li><code>.</code><ul><li>matches any character except a newline.</li><li>任意字符</li></ul></li><li><code>^</code><ul><li>the start of the string</li><li>行首</li></ul></li><li><code>$</code><ul><li>the end of the string or just before the newline at the end of the string</li><li>行尾</li></ul></li><li><code>*</code><ul><li>match 0 or more repetitions of the preceding RE</li><li>重复0+次</li></ul></li><li><code>+</code><ul><li>match 1 or more repetitions of the preceding RE</li><li>重复1+次</li></ul></li><li><code>?</code><ul><li>match 0 or 1 repetitions of the preceding RE</li><li>匹配0或1次</li></ul></li><li><code>*?</code>, <code>+?</code>, <code>??</code><ul><li><code>*</code>, <code>+</code>, <code>?</code><ul><li><strong>greedy</strong>: match as much as ppissible</li><li>后加一个 <code>?</code> =&gt; non-greedy: as few characters as possible will be matched</li></ul></li><li>例子:<ul><li><code>&lt;a&gt; b &lt;c&gt;</code><ul><li><code>&lt;.*&gt;</code> =&gt; <code>&lt;a&gt; b &lt;c&gt;</code></li><li><code>&lt;.*?&gt;</code> =&gt; <code>&lt;a&gt;</code></li></ul></li></ul></li></ul></li><li><code>{m}</code><ul><li>exactly m copies of the previous RE should be matched</li><li>指定次数重复</li></ul></li><li><code>{m,n}</code><ul><li>match from m to n repetitions of the preceding RE</li><li><strong>greedy</strong> : as many repetitions as possible</li><li>指定重复次数区间<ul><li>省略 <code>m</code>,下限为0</li><li>省略 <code>n</code>,上限无穷大</li><li><code>,</code> 不能省略</li></ul></li></ul></li><li><code>[]</code><ul><li>字符组<ul><li>内部有自己的规则<ul><li>元字符在[]失去特殊意义,变为匹配的普通字符<ul><li><code>[(+*)]</code> =&gt;  <code>(</code>, <code>+</code>, <code>*</code>, or <code>)</code></li></ul></li></ul></li></ul><ul><li><code>或</code> 的关系<ul><li>[amk] =&gt; <code>a</code> or <code>m</code> or <code>k</code></li></ul></li></ul><ul><li><code>-</code> 表范围<ul><li>[0-9]</li><li>[a-z]</li></ul></li><li><code>^</code>表非集<ul><li>[^5] =&gt; 任何非5的字符</li><li>[^^] =&gt; 匹配任何非<code>^</code>的字符</li></ul></li><li><code>[</code><ul><li>在字符组内匹配<code>[</code><ul><li>转义<code>\[</code><ul><li><code>[()[\]{}]</code></li></ul></li><li>放在 beginning<ul><li><code>[]()[{}</code></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><ul><li><code>|</code><ul><li>任意REs表达式的<code>或</code>关系</li></ul></li></ul><ul><li><code>()</code><ul><li>group</li></ul></li></ul><h2 id="matachar-extension">matachar Extension</h2><ul><li><code>(?...)</code><ul><li>extension notation</li></ul></li><li><code>(?aiLmsux)</code><ul><li><code>aiLmsux</code> 任意字符组合, set Flags for the entire regular expression.:<ul><li>re.A (ASCII-only matching),</li><li>re.I (ignore case),</li><li>re.L (locale dependent),  [w]</li><li>re.M (multi-line),</li><li>re.S (dot matches all),</li><li>re.U (Unicode matching),</li><li>re.X (verbose), [w]</li><li>[w]=&gt;<a href="https://docs.python.org/3.6/library/re.html#contents-of-module-re" target="_blank" rel="noopener">6.2. re — Regular expression operations — Python 3.6.6 documentation</a></li></ul></li></ul></li></ul><ul><li><p><code>(?:...)</code></p><ul><li>匹配在括号内的任何字符(非捕获版本),字符串无法操作</li><li>类似 (...), 但是不表示一个组<ul><li><code>(&lt;)?(\w+@\w+(?:\.\w+)+)(?(1)&gt;|$)</code></li><li>需要用嵌套(())时使用</li></ul></li></ul></li><li><p><code>(?imsx-imsx:...)</code></p><ul><li>3.6 only</li><li>(?imx: re) 在括号中使用i, m, 或 x 可选标志</li><li>(?-imx: re) 在括号中不使用i, m, 或 x 可选标志</li></ul></li><li><p><code>(?P&lt;name&gt;...)</code></p><ul><li>给 group 命名<ul><li><code>(?P&lt;quote&gt;['&quot;]).*?(?P=quote)</code><ul><li><code>(?P&lt;quote&gt;['&quot;])</code><ul><li>内容为<code>['&quot;]</code> 命名为<code>name</code>的组</li></ul></li><li><code>(?P=quote)</code><ul><li>调用这个组</li></ul></li></ul></li></ul></li></ul></li><li><p><code>(?P=name)</code></p><ul><li>存储调用&quot;name&quot;的 group(即复杂对应()内内容)<ul><li>调用方式<ul><li>同一个 pattern 内调用<ul><li><code>(?P=name)</code></li><li><code>\1</code></li></ul></li><li>匹配对象的调用( match object m)<ul><li><code>m.group('quote')</code></li><li><code>m.end('quote')</code></li><li>...</li></ul></li><li>re.rub()函数的 repl 变量内调用<ul><li><code>\g&lt;quote&gt;</code></li><li><code>\g&lt;1&gt;</code></li><li><code>\1</code></li></ul></li></ul></li></ul></li></ul></li><li><p><code>(?#...)</code></p><ul><li>A comment, ignore</li></ul></li><li><p><code>(?=...)</code></p><ul><li>lookahead assertion<ul><li><code>Isaac (?=Asimov)</code><ul><li>只匹配跟在<code>Asimov</code> 后的 <code>Isaac</code></li></ul></li></ul></li></ul></li><li><p><code>(?!...)</code></p><ul><li>= 的非集<ul><li><code>Isaac (?!Asimov)</code><ul><li>只匹配<strong>不</strong>跟在<code>Asimov</code> 后的 <code>Isaac</code></li></ul></li></ul></li></ul></li><li><p><code>(?&lt;=...),,,</code></p><ul><li>a positive lookbehind assertion<ul><li>搜前有<code>...</code>的<code>,,,</code>字符串<ul><li>O 匹配<code>...,,,</code>但是返回的结果只有<code>,,,</code></li></ul></li></ul></li><li><code>...</code>  only match strings of some fixed length<ul><li>只能匹配固定长度字符( py3.5+ 支持)</li><li>O <code>abc</code> or <code>a|b</code></li><li>X <code>a*</code> , <code>a{3,4}</code></li></ul></li><li><code>?&lt;=abc)def</code> match <code>abcdef</code> ,match object<code>def</code>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m = re.search(<span class="string">'(?&lt;=abc)def'</span>, <span class="string">'abcdef'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>m.group(<span class="number">0</span>)</span><br><span class="line"><span class="string">'def'</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><code>(?&lt;!...)</code></p><ul><li>a negative lookbehind assertion.</li><li><code>(?&lt;=...),,,</code>的非集</li></ul></li><li><p><code>(?(id/name)yes-pattern|no-pattern)</code></p></li><li><p>e.g</p><ul><li>邮箱匹配 <code>(&lt;)?(\w+@\w+(?:\.\w+)+)(?(1)&gt;|$)</code><ul><li><code>(?(1)&gt;|$)</code><ul><li>如果(1)存在,则<code>&gt;</code>存在,否则就是结尾<code>$</code></li><li>(1) 是第一个括号内容 即(&lt;)</li></ul></li><li>O <code>&lt;user@host.com&gt;</code> as well as <code>user@host.com</code></li><li>X <code>&lt;user@host.com</code> nor <code>user@host.com&gt;</code>.</li></ul></li></ul></li></ul><h2 id="special-matechar">Special \ matechar</h2><ul><li><p><code>\Number</code></p><ul><li>指代第 Number 个<code>()</code> group 中的内容<ul><li><code>(.+) \1</code><ul><li>O 'the the' or '55 55'</li><li>X  but not 'thethe'</li><li>注意空格</li></ul></li></ul><ul><li>\1...\9 匹配第n个分组的内容.</li></ul></li></ul></li><li><p>\A</p><ul><li>匹配字符串开始</li></ul></li><li><p>\b</p><ul><li>匹配一个单词边界的空字符,也就是指单词和空格间的位置.</li></ul><ul><li>'er\b' 可以匹配&quot;never&quot; 中的 'er',但不能匹配 &quot;verb&quot; 中的 'er'.</li></ul></li><li><p>\B</p><ul><li>匹配非单词边界. '</li><li>'er\B' 能匹配 &quot;verb&quot; 中的 'er',但不能匹配 &quot;never&quot; 中的 'er'.</li></ul></li><li><p>\d</p><ul><li>匹配任意数字,等价于 [0-9].</li></ul></li><li><p>\D</p><ul><li>匹配任意非数字</li></ul></li><li><p>\w</p><ul><li>匹配字母数字及下划线</li></ul></li><li><p>\W</p><ul><li>匹配非字母数字及下划线</li></ul></li><li><p>\s</p><ul><li>匹配任意空白字符,等价于 [\t\n\r\f].</li></ul></li><li><p>\S</p><ul><li>匹配任意非空字符</li></ul></li></ul><ul><li><p>\Z</p><ul><li>匹配字符串结束,如果是存在换行,只匹配到换行前的结束字符串.</li></ul></li><li><p>\z</p><ul><li>匹配字符串结束</li></ul></li><li><p>\G</p><ul><li>匹配最后匹配完成的位置.</li></ul></li></ul><h2 id="其他">其他</h2><ul><li><p>search() vs. match()</p><ul><li>match 搜索字符首位</li><li>search 搜索任意位置</li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">"c"</span>, <span class="string">"abcdef"</span>)    <span class="comment"># No match</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.search(<span class="string">"c"</span>, <span class="string">"abcdef"</span>)   <span class="comment"># Match</span></span><br><span class="line">&lt;_sre.SRE_Match object; span=(<span class="number">2</span>, <span class="number">3</span>), match=<span class="string">'c'</span>&gt;</span><br></pre></td></tr></table></figure>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.match(<span class="string">"c"</span>, <span class="string">"abcdef"</span>)    <span class="comment"># No match</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.search(<span class="string">"^c"</span>, <span class="string">"abcdef"</span>)  <span class="comment"># No match</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.search(<span class="string">"^a"</span>, <span class="string">"abcdef"</span>)  <span class="comment"># Match</span></span><br><span class="line">&lt;_sre.SRE_Match object; span=(<span class="number">0</span>, <span class="number">1</span>), match=<span class="string">'a'</span>&gt;</span><br></pre></td></tr></table></figure></li><li><p>span()起始位置</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">print(re.match(<span class="string">'www'</span>, <span class="string">'www.runoob.com'</span>).span())  <span class="comment"># 在起始位置匹配</span></span><br><span class="line">print(re.match(<span class="string">'com'</span>, <span class="string">'www.runoob.com'</span>))         <span class="comment"># 不在起始位置匹配</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> regex </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>幻想</title>
      <link href="/2018-07-27-Fantasy/"/>
      <url>/2018-07-27-Fantasy/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">  幻想的过去，现在与未来。 </blockquote><a id="more"></a><h1>幻想</h1><h2 id="0">0</h2><p><strong>想法与现实之联系是个有趣问题。</strong></p><p>小时候老家木门上，总有两个彪汉子画像，怒目圆睁。后来知晓那是门神，「哼哈二将」,驱鬼辟邪。吓没吓到鬼我不知道，反正吓到我了……</p><p>抹泪抽泣时我想，神丑成这副鬼样，独自一神时是否也会黯然神伤？ 嫌弃自己为什么不能好看点？</p><p>小时候放寒暑假，头几天永远壮志踌躇： 三天之内把所有作业做完，来一个疯狂畅玩假期。 疯狂畅玩是有，只是倒了个： 疯狂畅玩一个假期，然后在开学前三天把作业补完……</p><p>半梦半醒间我想，为什么我不能按计划行动？ 我是被鬼附身了吗？ 神为什么不来救我？ 在梦里做作业为什么不算数？</p><p>上学时大雨，宿舍楼被淹，积水有半身高，冲散门口垃圾堆，着实恶心。同学们都只能忍着恶心淌水出去。我问：「当真别无他法吗？」  他们说：「不可能有，否则谁愿意这么恶心？ 大家都这样。」 我不信邪，把整栋楼探了一圈，寻得侧面二楼窗户下面没有积水。我攀着防盗栏爬下去，湿了双手与鞋底……</p><p>脚踏实地时我想，不可能当真不可能吗？ 大家都这样所以一定我也要这样吗？</p><p>身边人常烦我：为什么我有那么多为什么？ 而我对于自己，对于世界确实总有困惑： <strong>『鬼神』为什么与我所想不一样？ 『我』为什么与我所想不一样？ 我所想和大家所想为什么不一样？</strong></p><h2 id="过去">过去</h2><p><strong>人何时拥有幻想世界： 有了鬼神想象，来世向往？</strong></p><p>大约四万年前，解剖学意义上的现代人出现在欧洲大陆上，开启以一系列崭新独特工具与艺术品为标志的后新石器时代，同时开始出现刻意墓葬与集体墓葬。<strong>刻意墓葬</strong>即有殉葬品的墓葬，考古学将刻意墓葬的痕迹当作人相信来世的证据。如果不是相信死者死后将去一个新世界，更可能将尸体扔进树林或天坑，而不是费心费力为死者准备精美日用品。比如距今两万一千年的西伯利亚玛尔塔(Mal'ta)遗址里，一个小孩的殉葬品有头冠，项链，手链，雕像，纽扣，骨尖等其他工具。 <strong>集体墓葬</strong>也有类似死后世界的暗示意义。比如捷克普拉德莫提 ( Predmosti ) 遗址，埋藏不同时间十八具尸体，隐含着后来死者要追随先行者，一同前往死后精神世界。</p><p>活人也可以通过宗教仪式进入那个世界。早期宗教，巫师与萨满通过音乐，舞蹈，有时还需药物，对信徒施展法术，直到他们完全丧失理智，进入出神迷离状态。那个时期所有巫师萨满都有同一主题。比如，穿过山洞或隧道，在先祖或图腾指引下穿越危险旅途，进入光华明亮的先灵世界。而有人找不到来时洞口，就是跳得力竭身亡，永远留在那边。</p><p>宗教，墓葬，乃至艺术等等幻想的出现并非偶然，意在维系广阔地域分布的大型社会化群体联系。 试看迷惑舞蹈对布须曼人的影响：</p><blockquote><p>在非洲南部的布须曼人中，当群体中开始有矛盾，成员有相互争吵的想象时，很可能就会开始跳迷幻舞蹈，这种时候，这种舞蹈起到了抚慰人心恢复平静的作用。 在癫狂的起舞中，所有不和谐的记忆似乎被抹去了，所有恶化的关系似乎得到了修复。一场迷幻舞蹈跳下来，似乎能够把所有社会关系重启到默认状态，让群体作为一个互助的关系网再次 投入正常的运行。直到经过数周甚至数月的积累，那些小小的问题和矛盾在不断加大，然后需要又一次迷幻舞蹈将一切困扰驱散。</p></blockquote><p>如此复杂宗教行为只在解刨学意义上的现代人中存在，还未有证据海德堡人或尼安特人也有类似复杂活动。依靠宗教等相关活动，人们拥有相同文化背景与道德观念，维系更大群体存在。维系庞大群体的现代人在竞争中占有优势，尼安特人面对对手招之即来的有力后援毫无还手之力。</p><p>可以说，<strong>幻想是现代人类赢得进化之战的关键所在。</strong></p><h2 id="现在">现在</h2><p><strong>幻想对于人当下行为有何影响？</strong></p><p>心理学家厄廷根教授通过20年系统实验来探寻积极幻想运作方式以及对人影响，挑战当时人们对积极心态如日中天的推崇： 「以积极心态看待未来，成功可能性就会大幅度提高。」 我们来简单选取两个实验来看幻想对人不同层次影响。</p><p>心理过程难以测量，因此可以间接通过血压收缩压来判断人投入程度与内心动力大小： 人在兴奋时，身体会摄入更多氧气和营养物质，人体心血管系统也会被唤起，输送更多血液。 因此松懈时血压会低。实验过程如下：</p><ul><li>164位女大学生，随机2组，在电脑填写问卷： 在三分钟内将幻想自己穿美丽高跟鞋的情景，将自发感想写下来。</li><li>随后分开： 一组被要求展开有关高跟鞋的三分钟乐观幻想，另一组要幻想穿高跟鞋带来的痛苦。</li><li>在两次幻想前后，对测试者血压进行测量，进行交叉比对：<ul><li>两个小组起初血压相持平</li><li>经过6分钟乐观幻想那一组收缩压降低了，而有负面幻想那一组血压没有变化。</li></ul></li></ul><p>实验结果显示了乐观幻想明显使人松懈，降低了人心理动力。 那幻想对真实表现确实有影响吗？ 教授又做了一组实验来评估被幻想消磨内心动力的人是否真的在实际行动中表现欠佳：</p><ul><li>49名大学生分为两组<ul><li>其中一组学生被告知去想象下一周事事顺心的情景----他们所做的每一件事都事随人愿。 比如考试好成绩，看喜欢的节目，开心地聚会等等。</li><li>另一组学生则被要求”想象并写下对下一周任何想法和憧憬”,作无倾向预想。</li></ul></li><li>被测评估自己投入程度。</li><li>一周之后再回来完成一个心理测试，看看他们在应对日常生活困难的表现如何。</li></ul><p>实验结果显示做乐观幻想的学生在过去一周投入程度不足。而且他们越是觉得投入不足，在过去一周所成之事越少。乐观幻想降低他们内心动力，也影响他们日常表现。</p><p><strong>对于大脑而言，幻想也是一种行为。</strong> 人们可以通过幻想食用某种食物来减少其实际进食量，在头脑中模拟体育活动也会导致如真实运动一般呼吸与心跳变化。幻想行为让大脑误以为行为已经完成，导致真正行动难以启动。因此，幻想一方面阻碍了人当下愿望的达成，也让人们在绝望时刻维持了希望，比如等待丈夫出狱倍受煎熬的妻子，等待儿女失踪归来的母亲，只能依靠幻想来来苦苦维持。</p><h2 id="未来">未来</h2><p><strong>幻想如何影响人的未来？</strong></p><p>苏联研究员尤里·瓦西列维基·康得提尤克(Yuri Vasilievich Kondratiuk)在1928年如此写到：</p><blockquote><p>我在脑海中对最近几年的重大科技成果进行回顾和总结，问道： 为什么星际运输的问题至今仍未解决？ 我的答案是： 缺乏胆识和开拓精神。</p></blockquote><p>Triz 创始人根里奇·阿奇舒勒在一个研讨会提了一个问题：</p><blockquote><p>“假设有300个电子，分成几组，必须从一个能量级跃迁到另外一个能量级。但是其中有两组之间已经发生了量子转换效应，因此电子不能放在这两组，实际的组数比原来计算的少，现在每组都多出来5个电子，那么总共有多少组电子？”</p></blockquote><p>会上全是高级工程师，却都不打算思考这个问题，因此这个问题久悬未决：<strong>这是量子力学的问题，我们是机械工厂的。既然别人解决不了这个问题，我们也解决不了。</strong></p><p>当根里奇·阿奇舒勒转化了问题形式，问题立马解决了：</p><blockquote><p>“我们安排一些大巴把300个队员送到夏令营，但是有2辆大巴没有在规定时间出现，因此，实际上每辆大巴比原来计划多乘坐了5名队员。 那么实际去了多少辆大巴车？”</p></blockquote><p>当人们说「不可能」时，往往并没真正了解问题。而根里奇·阿奇舒勒通过追踪科幻作家凡尔纳， H.G. 威尔士，亚历山大·比力阿耶夫著作中244个想法实际实现状况，得出一个结论：『不可能』想法比『可能』想法更有可能实现。</p><p>一个典型例子是凡尔纳通过加农炮发射太空船的想法。 美国和加拿大专家启动一个名为 Harp 的项目实现了这个想法，以更低成本成功发射卫星。 如果不是凡尔纳想法被认为不可能，20世纪20年代人类就已经能将几吨重卫星送上太空。</p><p>伟大发明总伴着嘲讽，天才与疯子只有一线之隔。斯蒂芬森(Stephenson)发明的火车被评论为「...人们不大可能把自己生命托付给这样的机器，心甘情愿在火箭里变成灰烬」。售卖电话的贝尔(Alexander Graham Bell)被美国报纸亦被称为江湖骗子。</p><p><strong>愿望有所创造的人，意愿开拓未来的人，必须把『不可能』踩着脚底。</strong> 追寻正解的道路漫长而困难，但，千里之行始于脚下。</p><h2 id="1">1</h2><p>现代人类拥有更复杂心智能力，这让我们赢得进化之战，也让人类在心理上更容易受到伤害。它让我们维系更大的社会群体，也让我们为可能的挫折痛苦而恐惧； 它让我们拥有度过绝境的希望，也阻碍我们为愿望真实行动； 它让我们拥有奇幻瑰丽的故事，也能有力促进技术进步与发明。</p><p>西彦云： 让上帝的归上帝，让凯撒的归凯撒。我们当让幻想做它能做好的事，而不对它有额外奢望。幻想与真实看似对立，却交织纠缠。就如王国维对于<code>造景</code>与<code>写景</code>的表述：</p><blockquote><p>有造境，有写境，此理想与写实二派之所由分。 然二者颇难分别。因大诗人所造之境，说写之境，亦必邻于理想故也。</p></blockquote><p><strong>人之发展，即不断让造境成为写境的历程</strong></p><h2 id="参考">参考</h2><ul><li><a href="https://book.douban.com/subject/26834220/" target="_blank" rel="noopener">人类的演化 (豆瓣)</a></li><li><a href="https://book.douban.com/subject/26616951/" target="_blank" rel="noopener">WOOP思维心理学 (豆瓣)</a></li><li><a href="https://book.douban.com/subject/3354596/" target="_blank" rel="noopener">创新算法 (豆瓣)</a></li><li><a href="https://book.douban.com/subject/11601199/" target="_blank" rel="noopener">人间词话 (豆瓣)</a></li></ul><h2 id="tl">TL</h2><ul><li>180727 <code>1T</code> NBR-hugh add 检查，写匠</li><li>180727 <code>4T</code> NBR-hugh add 未来 &amp; 1</li><li>180726 <code>4T</code> NBR-hugh add 现在</li><li>180725 <code>5T</code> NBR-hugh init 0 &amp; 过去</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>书籍</title>
      <link href="/2018-07-23-Book/"/>
      <url>/2018-07-23-Book/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 静止,即是死亡. </blockquote><a id="more"></a><h2 id="书籍">书籍</h2><p>在翻动中生存,<br>在交流中生活,<br>在行动中生命,<br>无人的图书馆,<br>腐朽的乱坟岗.<br>静止,即是死亡.</p><h2 id="book">Book</h2><p>survival in turning,<br>live in conversation,<br>life in action,<br>no man's library,<br>decayed graveyard.<br>motionless means death.</p><h2 id="tl">TL</h2><ul><li>180723 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>对话</title>
      <link href="/2018-07-16-Talk/"/>
      <url>/2018-07-16-Talk/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 浪花拍向礁岩，碎裂，得见他人，重生自己 </blockquote><a id="more"></a><h1>对话</h1><h2 id="0">0</h2><p>想一想，你身处群体讨论中,那些面红耳赤，忿怨不平的怒火? 那些想要袒露,又旋即放弃的羞涩? 那些会上无言,会后多语之悔悟?</p><p>人思如泉涌。人们渴望共鸣俱流却多分歧争端，气愈急心愈狭，僵入死局; 泉水欲奔流入海却往往泥沙分流，量愈小流愈慢，直至干涸。人无共识意，江无聚海流。</p><p>思维无迹可寻，只能对话交流中得窥一二。人类需要共识，却天生固执己见。上到国家对话，下到家庭谈话，异己纷争随处可见，知交之谈却难觅其踪。戴维·伯姆在1970年对于沟通的观察依然适用于今日:</p><blockquote><p>过去几十年来，现代科技发展一日千里，广播，电视与飞机，卫星构成一个庞大的网络联通全球，全世界的任何一个角落都几乎可以在瞬时间彼此联相连，然而与此相对应的，则是人与人之间感觉日渐隔阂，彼此间的沟通以空前的速度，变得每况愈下。</p></blockquote><p>如今多了互联网与手机，状况有好转吗? 那些为方寸屏幕低下的头颅何时能够抬起? 网络言语暴力似乎更比现实过犹不及? 时间流逝着，人们貌近神离，相俱无言，更甚者直诉暴力。</p><p>人心各异，其间不过几尺，却如远山相隔万里，千泉各自暗涌，何时共聚入海流?</p><h2 id="千流竞涌">千流竞涌</h2><p><strong>对话是人与人间意义之流淌　(flow of meaning)。</strong></p><p>水有江河溪海，话语又有何面貌?</p><p>我们每天都在说话，但是我们真的会对话吗? 表达说话的词似是而非: 会谈，谈心，聊天，谈判，讨论，争辩，劝告，商量。 形容交流的词也是千奇百怪: 众口铄金，言不由衷，答非所问，左右言它，洗耳恭听，话中有话，绵里藏针。王松涛先生将不同谈话形式归结到至少以下四型:</p><ul><li><strong>聊</strong> ，闲谈，东拉西扯，海阔天空。为了说话而说话，为了发泄而说话。聊字本意耳鸣，结果不过徒增耳旁嗡嗡之声而已。甚少信息含量。</li><li><strong>辩</strong> ，相互竞争，证明你对我错，以达成我赢你输结果。</li></ul><ul><li><strong>商</strong> ，相互妥协，不管谁对谁错，各退一步，彼此折中而达成满意结果。至于折中妥协的的是不是真理，就不去管了。</li></ul><ul><li><strong>谈</strong> ，关心真正真理所在，不对真理做任何折中妥协，不在乎谁对谁错，不在意是否一定有一个结果。人人认真倾听他人，人人亦能表达内心深处的真实看法，追求一赢具赢。</li></ul><p>聊者，觥筹交错，兴高采烈，好不快活。但无论如何眉飞色舞，神侃狂聊过后，空虚怅然滋长。重浅层欢愉，虽有流淌，但无意义;  辩者，输者愤懑不平，赢者自鸣得意，看似交锋激荡，却依然各自固我: 盲人摸象，一言尾为象，一言腿为象，无论胜负，永无俱得真象之日。 重胜负之心，各执意义，永无流淌;  商者，双方各谐乐满意，无关真理，面子给足即可。如地表浅垄相隔，互泼几瓢以通有无，以示敬意，地下却岩结千层，永无相通之日。重面子轻真理，乡愿而已。</p><p><strong>真正能汇流成海的，是谈，是意义的相互流动: 在最自由，最诚挚的交流中涌现真知灼见。</strong> 这样的交流弥足珍贵，虽常如昙花，但一有所尝，终身难忘。当你与挚友推心置腹，开诚布公，当你放下我执真正思考他人想法，当你勇敢说出真实想法得到回应，凡此种种时刻，人们如银鲤跃过龙门，真正感受共识壮阔。</p><blockquote><p>涛间汹涌， 风云开阖。</p></blockquote><h2 id="浪遏飞舟">浪遏飞舟</h2><p>既然自由对话如此可贵， 为什么真诚交流如此稀有? 是什么阻碍了人们真诚交流?</p><p><strong>根源在于人的思维。</strong> 奔流的思维之水，从源头开始就犯了错误，自己卷起泥沙堵死了通往大海的路而不自知。</p><p><strong>人类思维总在分裂地看世界。</strong> 戴维·伯姆以&quot;碎裂的钟表&quot;作喻: 原本手表的零部件存在内在有机联系，而碎片毫无联系可言。人们常常将原本并不独立的事物还原得更支离破碎，如此方便了人类认知，却无法觉察事物整体内在联系。如此，人与人的观念就永远失去调和乃至超越的可能。世界上个体间，集体间，价值体系间，信仰间，国家间等等根本矛盾皆在于此。</p><p><strong>根本矛盾易发冲突，刺激人们自我防备的本能。</strong> 每个人都有自己根深蒂固的不思维假定，人们往往把自己想法当作自己。因此当想法不被接受，就感觉自己受到攻击，丛林法则下对身体的自我保护本能同样发生在了思维上，即使当前并非丛林险境。俗语所谓&quot;脑子一热&quot;: 一方面当你一味攻击对方，便不会仔细思考对方所言是否可取。交流自然无以为继，只余纷争突起。另一方面这种险境压力要求思维更好地表达自我形象，自欺毒花便于此萌芽。</p><p><strong>最致命的是，人们对思维过程难以自觉。</strong> 人们同时认为自我想法就是现实本身，真理本身，而非需要纠偏的表征。人们可以感受到自己的手，可以根据不同需要变换手形，但却难以对自我思维如此。思维可以探查万物，却不知道自己做了什么。思维本身导致错误，却认为责不在己。错误思维源源不断产生错误想法，事情往往因此变得更糟。</p><p>自我是多层演化堆积的结果，个人思维是集体思维的结果。你所以为的自我思想，只是基因，父母，社会，集体为你编制好的&quot;人生脚本&quot;不自知运行的结果。当你不承认人力有限而世事复杂，无法辨识想法，自我与现实三者之别，无法放下自我狭隘碎片，无法悬置自我思维过程，对话不复存在，自由无处可寻。</p><p><strong>清泉高歌奔入海，势必要破开那亿万年沉积之尘岩。</strong></p><h2 id="中流击石">中流击石</h2><p>对话困难重重，如何能够克服? 我们如何进行对话? 又需要注意什么?</p><p><strong>对话是什么，又不是什么?</strong> 对话是人与人直接面对的过程，不是理论探究或苦思冥想; 对话也不是心理辅导，虽然长期对话对心理障碍有一定功效; 对话亦不是诉苦大会，虽然对话会不可避免会涉及个人问题，但这并不是信任与真知灼见的真正来源。对话的唯一要义在于: 破除固执己见之绝对必要，而涌生共识共创之绝对必要。</p><p><strong>开始对话前需要对于对话本身进行探讨。</strong> 当我们召集人们对话，开始前需对对话本身进行讨论: 我们为什么要对话? 对话的意义是什么?有哪些需要注意的地方? 知晓行动本身价值而自发尝试，与被动接受别人安排尝试，效果云泥之别。就如费曼在自传中提及那些为曼哈顿计划作计算的年轻人，被告知自己所参与计划的伟大意义后，表现出了令人吃惊的效率与创造力。勾起大家的兴趣,我们才能更好地对话。</p><p><strong>关注对话过程而非身份认同感。</strong> 倾听，观察，关注思维发生过程，观察其紊乱所在，辨别出错原因与影响因素，对顺利开展高质量对话极其重要。</p><p>对话之重不在于改变意愿之强烈，压制和无视都是不对的，更重要的是弄明白它是如何发生的，看到它。对话中思考自己是否在真正对话打扰成员沉浸对话，反而是阻碍。而亲疏地位之别会扭曲人对实际过程的认知，亦成为阻碍: 你对我不屑一顾，我对你嗤之以鼻。一场对话之成功不在于人们有多亲近，而在于大家关注点是否都在对话本身上。只有悬置己见，你才能真正看清思维运作过程。</p><p><strong>对话过程中注需注意把控反应。</strong> 对话过程中，人们需对自身乃他人种种反应加以注意。人们出于各自不同兴趣，带着各自不同假定进行对话，随着对话进行，冲突难以避免。讨论会日趋激烈，甚至白热化，剑拔弩张。 这时就需要未完全陷入自己思维假定的人出来降温，维持在一个平衡:  大家都保持一定清醒，但又能诱导出彼此真实想法。</p><p><strong>对话需定期长期，1到2年以上为宜。</strong> 当一个对话团体刚刚成立时，人们常常会东拉西扯，避免尴尬。所谓&quot;江湖险恶&quot;的流行人际学影响下，人们不愿直面任何事情，未做好触及真正深层问题的准备。开始时更多是协商，寻求大家都愿意接受的对话方式，原则。但协商只是一个起点，以此让对话继续下去。人们在对话中会受挫，暴躁。厌倦，激动胶着，但只有认真长期对话，才能破除种种障碍，成员各自深层思维假定自会浮现。 困难背后是意想不到的惊喜。只是这种惊喜并非线性，需要耐心。</p><p>万事开头难，实际所遇种种困境非三言两语能道尽。唯一可以肯定的是: 开始尝试 !  百川汇海非一日之功。不断观察迭代，自是病树前头万木春。</p><blockquote><p>乘风破浪会有时，直挂云帆济沧海。</p></blockquote><h2 id="惊涛拍岸">惊涛拍岸</h2><p>真诚对话如行万方沙漠，寻一眼绿洲。艰难如此，甘澧何在? 对话有哪些深层价值?</p><p>对话体贯穿古今东西: 西方　&lt;理想国&gt;　苏格拉底与柏拉图对谈，东方　&lt;论语&gt;孔子师生对曰，佛禅交相机锋，皆由对话示道。而现代对话理论则首推伯姆对话(Bohmian Dialogue)。其对话理论之要在于对话除了探索理解交流的问题时，还旨在从本质上来理解意识。通过关注对话过程，进行长期对话来促使人们看见自己的思维假定，理解他人的思维假定，共创超越对立矛盾的新见解，从而有望消解人与人日益严重的隔阂与分歧。</p><p>伯姆心忧人类思维无迹可寻的紊乱所带来的深重灾难，1970年便开始思考对话相关问题，直至1992年去世前一直不断完善自己的对话理论。他在与印度教育家克里希那穆提 (Jiddu Krishnamurti) 的讨论中关注到思维本质是集体性而非个体性，思维本身存在自指悖论，传统内省自修无法真正理解心智，深层思维假定只能在与外界碰撞中显示出来;  他与英国医生德玛赫 (Patrick de Mare) 关注到20人以上组成的群体可视为为整个文化系统的小型样本，包罗各式文化观念与价值体系，人们可以在长期对话中诞生彼此坦诚信任的&quot;纯粹友谊&quot; (impersonal fellowship) ;  在1984年春，他注意到对话群体意义流动与不预设议程对话的重要意义:</p><blockquote><p>周末时，大家都期待围绕对话内容开展一系列讲座，交流和研讨，最后发现对话本身其实涉及一些更重要的事情: 大家领悟到，对话的过程应当是让各种不同的意义在全体参与者之间自由流动。<br>在对话中，人们最初只是表达各自固定的立场，牢牢维护自己的见解; 随后他们意识到，维持群体友谊氛围比固守己见更重要。这从友谊是纯粹客观的，她的建立与对话者之间是否有密切私人关系无关。<br>由此而出现一种新的心态，这种心态立足于共同意义的建立与分享，而这种共同意义这在对话中不断更新改造。这时候人们不再对立，但也不能说达到了彼此交互作用的地步; 事实上他们开始一起参与并分享一个不断发展和变化的共同意义之库。在这一过程中，群体无需为对话预先设定任何目的，目的可以在对话的过程中随时自发生成与改变。群体成员之间由此进入一种新型动态关系之中，任何一个人都不会被拒绝发言，任何特定的对话内容都不会被排斥。在上述原则指导下，我们就可以开始探索对话的种种可能性与潜力。照此坚持下去，我们更准可能去改造人与人之间的关系，甚至进而改造源生这些关系的意识之最终本质。</p></blockquote><p><strong>浪花拍向礁岩，碎裂，得见他人，重生自己。</strong></p><h2 id="1">1</h2><p>个人思维紊乱分裂，失真固我，到世间繁事纠结矛盾，混乱难缠，如微分到积分，不过累积放大。</p><p>对于自我，我们未曾察觉的社会观念与前置假定在左右我们的行为，看似零散的不同事件行为往往是内隐行为模式的不同表现。长期对话会动摇我们所固守的文化观念，生存意义乃至自我认知。全新自我，真挚友谊随之生成，人与人间开放，共享，信任也成为可能。</p><p>对于人类世界复杂问题，也许答案难寻。但是，重要的不在于答案本身，而在于人们放弃自己固执的思维定势，超越人为的二元对立，兼容并蓄创造性解决问题。</p><p>没有活水之池塘，腐烂发臭是它唯一命运; 只有无垠大海，才足以承载孕育生命之希望。</p><blockquote><p>浩浩汤汤，横无际涯。</p></blockquote><h2 id="tl">TL</h2><ul><li>180716 <code>2T</code> NBR-hugh fix &amp; adjust &amp; AIWritter</li><li>180716 <code>2T</code> NBR-hugh add 惊涛拍岸</li><li>180716 <code>2T</code> NBR-hugh add 中流击石</li><li>180716 <code>3T</code> NBR-hugh add 浪遏飞舟 &amp; 1</li><li>180714 <code>2T</code> NBR-hugh add 千流竞泳</li><li>180714 <code>2T</code> NBR-hugh init 0</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenMind </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>完成</title>
      <link href="/2018-07-11-Done/"/>
      <url>/2018-07-11-Done/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">  花自枯去水自流, 不觉人间已白头.   </blockquote><a id="more"></a><h2 id="完成">完成</h2><p>三天打鱼忙,<br>雄心昭日月,<br>激情感上苍,<br>长城万里,一日竞完.</p><p>两天晒网罔,<br>灰心漫穹霾,<br>山河烬无光,<br>一日所滞,千岁作古.</p><p>古来胜败皆常事,<br>唯恐深沦心弊沉.</p><p>独困心烦,<br>花自枯去水自流,<br>不觉人间已白头.</p><h2 id="tl">TL</h2><ul><li>180711 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>台风</title>
      <link href="/2018-07-11-Typhoon/"/>
      <url>/2018-07-11-Typhoon/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 狂风舞鱼龙, 倾雨歌天籁.  </blockquote><a id="more"></a><h2 id="台风">台风</h2><p>千怒空人嚣,<br>万寂开幕台.<br>狂风舞鱼龙,<br>倾雨声天籁.</p><h2 id="tl">TL</h2><ul><li>180711 <code>15m</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>改变</title>
      <link href="/2018-07-04-Change/"/>
      <url>/2018-07-04-Change/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 噩梦挣扎难，一醒原平常。 </blockquote><a id="more"></a><h1>改变</h1><h2 id="0">0</h2><p>群狼环伺，他满身血痕于千钧一发之际脱困，慌不择路地拼死逃跑，不觉只身已临悬崖绝路，脚边碎石滑落深渊，悄无声息。身后群群幽绿咄咄逼人，身前无尽深渊冷冷凝视，耳边似有谁在无尽呼唤，他奔向那明月流云，闭眼纵身跃下...</p><h2 id="野兽凶猛">野兽凶猛</h2><p>每个人心中都有一只猛兽。中岛敦《山月记》如指心之匕，见血封喉:</p><blockquote><p>世上每个人都是驯兽师，而那匹猛兽，就是每人各自的性情。对我而言，猛兽就是这自大的羞耻心了。老虎正是它。我折损自己，施苦妻儿，伤害朋友。末了，我就变成了这副与内心一致的模样。<br>如今想起来，我真是空费了自己那一点仅有的才能，徒然在口头上卖弄着什么“人生一事不为则太长，欲为一事则太短“的警句，可事实是，唯恐暴露才华不足的卑怯的畏惧，和厌恶钻研刻苦的惰怠，就是我的全部了。</p></blockquote><p>人贵有恒却难行。心辕意马肆狂乱，安禅仍难制毒龙。执着摆脱困境或某种瘾而不能者，总会落得这般境地:</p><p>感觉自己如此努力，为什么问题却仍存，乃至更糟？ 试过各种方法，各种书籍，开始总都感觉曙光就在眼前，最后却依然复坠无边黑暗里。万法不通，深感无力。 在关键时刻，仿佛有无形泥沼在拽着你向下，或让不知何来闷棍敲昏头，事后顿首懊恼，追悔莫及，依然一次又一次重复相同剧情。继而无知而蛮横地强迫自己，起得更早，逼得更狠，投入更多。</p><p>可是，骑象人小细胳膊小细腿，如何拧得过远古巨象野蛮本能？</p><p>努力 -&gt; 不知不觉懈怠 -&gt; 放弃 -&gt; 不甘心 -&gt; 再次尝试</p><p>压力逐积，挤占心智带宽，人会变成傻瓜。傻瓜在屡试屡败循环中习得性无助，又借助自欺维持可怜自尊，为了维系自我形象于不坠，只好对既往事实证据视而不见。</p><p>大脑神经元成百上亿，自己却硬生生在同一处使劲短路，不自觉地往复同一失败，蹉跎光阴。</p><p>无数次追问，无数次不甘心地上下求索: 到底要怎么破掉它？ <strong>如何才能达成真正改变 ？</strong></p><p>如维特根斯坦所言: 为困于瓶中苍蝇指出一条出路。 其实那最不显眼瓶口就是出口。</p><p>对于自溺沼泽者而言，思维如游魂，要么飘荡在过去懊悔，要么游离于未来大梦，当下真实原本触手可及，却与其灵魂相去千里。</p><p>他们 <strong>无法接受自身与环境残缺</strong>，一心溺于自构乌托邦心智假象。那些脆弱完美主义者，因为第一步无法到达完美，就永远停止了前行，失去真正臻于至善之可能。</p><p>他们不明白一味探究过去行为原因，是一种自我设限解决问题手段。 <strong>对于人的问题，是什么比为什么重要。</strong> 他们对真正发生视而不见，陷于为什么所引无穷假设泥沼，孳生种种负面情绪，阻碍着切实行动产生，乃至解决方案本身亦成阻碍。</p><p>他们不明白摆脱无助的 <strong>真正改变不来自执著求变，而来自自由开放，协作共享。</strong> 不必苛求自己成为全能者，更应当去寻找知晓正确探索方法，能够协同探索之伙伴。</p><p>所谓野兽凶猛，其实与人本自一体，种种紧张无力皆为心之幻象。追溯真实情况，投入真实问题，答案自在风中飘荡:</p><p><strong>醒来！</strong></p><h2 id="梦里梦外">梦里梦外</h2><p><strong>系统之内，凡事愈变，愈是不变。</strong></p><p>1974年，美国 MRI(Mental Research Institute)的保罗·瓦茨拉维克(Paul Watzlawick)，约翰·威克兰德(John H Weakland) 和理查德·菲什 (Richard Fisch) 三人合著 &lt;改变&gt;一书，借助群论(The Theory of Groups)中以及逻辑类型理论 (The Theory of Logical Types)来表述「变」与「不变」问题研究相关结论。其中涉及群简单特性如下:</p><ol><li>群由共有某种特征的成员所组成。</li><li>群内成员以各种不同顺序来组合，组合结果仍相同。</li><li>群系统中每一成员皆有其相对或相反成员，任一成员与其相反成员组合，结果为恒等成员</li><li>每一个群皆包含一恒等成员(identity Member):任何其他成员与该成员组合，结果仍为该成员本身。</li></ol><p>这些性质映射到实际生活，常见于一系列循环式因果变化:</p><ol><li>一个男孩爱上一个女孩，将她绑架囚禁起来。情形看似女孩是男孩的囚犯，但其实男孩亦是女孩的囚犯。男孩渴望女孩爱上他，既无法强迫她，也不敢放了她。女孩希望男孩放她走，但不说爱他无法逃脱，而说爱他也无法赢得男孩信任。两人任何行为都无法达成各自目的，使得自己在困境中越陷越深。</li><li>临床经验中「反问题少年行为」。当家中一个问题青少年行为有所改善，另一个原本乖巧的孩子可能开始变得不良。由于她不能再像以往一样批评对方不是，现在就变成嘲弄对方好表现。因此如果无法使对方回归原况，就自己开始做坏事。家庭中依然存在好少年与问题少年。</li><li>概念往往借对立存在而具有实质内容，他们彼此特性看似排斥，其实只是参考架构互补两面: 光暗，正确错误... 比如关于变化一个常见错误推论，若某物为恶，则对立面为善。由毛泽东在&lt;论持久战中&gt;对「速胜论」与「亡国论」之批驳可明其惘: 如果脱离现实状况，盲目乐观与盲目悲观没有本质区别，都会导致败亡。</li><li>恒等成员就如数学里的「0」，在实践中往往代表着某种平衡状态。比如妻子抱怨丈夫酗酒，丈夫会喝得更凶，反过来使得妻子会变得更唠叨。双方所采取策略使得问题依旧，乃至更糟: 丈夫依然酗酒，妻子依然唠叨。(-1) + (+1) 等于 0，(-5) + (+5) 依然等于 0。</li></ol><p>以上所有示例都涉及一种两难困境， 群内任何变化都无法真正打破群平衡，如此僵局常见于日常生活。 而打破僵局根本性变化，却多存在于人们希冀里，在现实中罕见。</p><p>&lt;改变&gt;在这些假设之上，借助「逻辑类型理论」递进描述了两类变化区别:</p><ol><li>改变发生在群系统内，系统本身维持不变，称为 <strong>第一序改变(first-order change)</strong> ，如一个人在噩梦中如何挣扎也无法摆脱噩梦;</li><li>改变群系统本身的改变，称为 <strong>第二序改变(second-order change)</strong> ，如人从噩梦中醒来。</li></ol><p>这种不经意间之「醒」，其实在于摆脱 <strong>预设思维定式</strong> 。根源在于， <strong>人们常常把自我与自我看法看作一体，又把自我看法当作现实真实本身。</strong> 当你看到自我思维，接受自我局限，改变才真正开始发生。</p><p>书中所列举「九点问题」就精彩地展示了这一点: 下图所示九个黑点，请你笔不离纸地以4条直线连接起来。推荐大家自己做做看，若想知晓答案，亲自去读读 <a href="https://book.douban.com/subject/3006742/" target="_blank" rel="noopener">&lt;改变&gt;</a> 吧！ 真正改变从了解并接受当前困境开始。 ;P</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fsv7pbhqj0j306i04eweh.jpg" alt="九点问题"></p><p><strong>系统之外，脱梦入实，方得自在。</strong></p><h2 id="千面幻境">千面幻境</h2><blockquote><p>我们一味追求不可能的事物，却使得那些可能得到的东西变成不可能---- 罗比特·阿德里(Robert Ardrey)</p></blockquote><p>日常生活中，人们容易陷入哪些困境？ 世间问题往往因为初次处置不当而成为死结。不良应对习惯一旦成形，那么即使外在影响消去，当事人仍将困囿于内心，久抑成病。 &lt;改变&gt; 一书揭示了三种重要不当处理:</p><ol><li>企图否定问题存在来解决问题</li><li>企图解决不存在或无法改变的问题</li><li>在错误层次上采取行动解决问题</li></ol><p>第一类人我们称之为「 <strong>过度简化者</strong> 」。他们否认问题之初，主要是为了维持内心自我形象，而恶化根源在于对社会系统间复杂互动关系过于粗糙地简化。人的问题愈是悬而未决，不良情绪愈是累积， 原本简单问题变得更加复杂纠缠。  <strong>人们否认问题，渴望简单解释/方法的思维定式不仅本身会成为阻碍，还会将那些承认问题，试图解决问题的人当作唯一阻碍。</strong> 比如癌症这类复杂疾病，即使顶级专家也只能让自己局限于整个领域一个小范围。而大众期待将维生素 b17 等毫无价值化合物一夕之间变成简单终极灵药。 如果专家加以否定，会被怀疑其打压新药别有所图。</p><p>第二类人我们称之为「<strong>乌托邦主义者</strong>」。 乌托邦主义者不否认问题，只是将自己推向另一个极端: 明明问题无解，却坚信有解决之道。正面乌托邦症候群存在三种形态:</p><blockquote><p>1 内射式」(introjective)。 ... 当目标无法达成，他们不会怪罪与目标的理想性，只能归自己无能: 我的生活应该更丰富充实，而我却生活在平凡与无聊中;我对生命应该有强烈感受，可是我却无法唤醒这些感受。这一困境可能使人「退出社会」: 忧郁，退缩，甚至自杀。<br>2 「拖拉型」 。 这一类型的人不会因乌托邦而责怪自己，反而沉溺一种比较无害，近乎儿戏的拖拉之中。他们觉得目标既然如此遥远，这一趟旅程也将倍加艰辛，而长途旅行是需要长途准备的。这些人从来不抵达一个目的地，只是永远飘荡。那些永远的学生，完美主义者，以及每次在成功前夕开小差的人，即是典型例子。<br>3 「投射式」(Projective)...罗伯特·阿德里应用卢梭名著&lt;爱弥儿&gt;第一句话来描述这些现象: 自然使我快乐和善良，如果我不是这样，那么就应该怪这个社会。</p></blockquote><p>此外，还存在一种反面乌托邦: 这类人认为「困难不存在」才是问题，事情愈是顺利愈是糟糕，非得把它弄得困难重重不可。比如一位轻松过关斩将的聪明学生，会恐惧真相揭晓自己其实一无所知，过去成绩全都靠「运气」，陷入自我怀疑的阴霾。正反乌托邦都将人生中常见的困难和快乐视为反常现象。<strong>关键问题在于，他们都把自己对于事实的假设看得比事实本身更重要。</strong></p><p>第三类人，我们称为「<strong>悖论迷失者</strong>」。人类学家格雷戈里·贝特森在20世纪50年代提出双重约束理论(Double-Bind Theory):当个人(或团体)收到两个或两个以上相互矛盾信息时，对一个信息成功响应导致对另一个信息反应失败(反之亦然)。这个人不管回应如何，都会自动地犯错误。一个克里特岛人说所有克里特岛人都是说谎者，他在说真话还是在撒谎？ 真话又是谎言。 当一位母亲对她孩子说: 「你应该自己想要去读书。」 孩子应该听从吗？ 听从亦是违反。</p><p><strong>悖论产生于陈述具有自我放射性(self-reflexivenness)，使人混淆了成员个体与群整体，进而在错误层级采取行动。</strong> 以第一序改变应对第二序改变问题会失败，反之亦然。比如希特勒时代所谓「内心出走」的沉默也被视为一种敌意。老百姓不能只是忍受强迫，还应该希望独裁者强迫。而被独裁者心灵折磨后， 人们不死即疯，或是成为机械应声虫，远远达不到他要求。这悖论也存在于教导不良学生以及改造罪犯上。 他们都错在没有尊重人认知事物的自然过程与客观规律，企图粗暴强迫地直接改造精神想法。</p><p><strong>困境各有千种面貌，万种成因，说到底即是人对世界与自我表征错误，无法与世界客观规律相适应。</strong>  遗憾的是，对困境成因了解得再鞭辟入里，要真正跨出摆脱死结那一步依然困难。世界复杂多变，理想与臆想只有一线之隔。欲脱离幻境，我们需寻 &lt;盗梦空间&gt; 那个牵动人心的陀螺，指示一线生机所在。</p><h2 id="一线生机">一线生机</h2><p>改变三人组对发生在日常生活中 「自发性改变」 案例进行探访，总结第二序改变四个原则:</p><ol><li>第二序改变针对第一序改变问题解决方案，即解决方案就是问题症结</li><li>第一序改变基于一般常理产生策略，而第二序改变方法往往令人不可思议，存在令人困惑不解或矛盾的因素</li><li>第二序改变处理此时此地情景，直接处理问题结果而不是探究问题发生假设性原因。</li><li>第二序改变破除悖论纠结陷阱，将问题置于不同框架下思考。</li></ol><p>我们来对这些原则进行具象理解:</p><p><strong>解决方案本身成为问题在于一味增幅错误行为。</strong> 学生发现自己进度赶不及安排，就延长投入时间，结果学习时间过长导致疲态，自我效能低迷。反而限制学习时间能学习表现。其他如事业失败希望投更多钱来弥补，赌钱输红眼希望一把翻身，皆相类。。如果行为定式没有改变，一味扩张投入，只会更加失败: 问题依然存在，痛苦与日俱增。</p><p><strong>不可思议来自于无意行为恰好破除了自我思维死循环。</strong> 一对夫妻冷战，他们行房次数越来越少的苦恼，因为床方位变化而意外消解。他们借宿在一个朋友家。夫妻家床可以两边各自上下床，朋友家床只能单侧下床，丈夫下床需要爬过他太太，改变居然就发生了！ 丈夫事后回忆道:「我这才了解到原来床另一边存在一些有价值的东西。」</p><p><strong>是什么比为什么重要在于大脑仍然是一个黑箱。</strong> 维特根斯坦在&lt;哲学研究&gt;中批评过解释取向研究方法的局限性:「 解释总是有终止时，可是 <code>5</code> 这个字意义究竟是什么呢？ 我们只有探究 <code>5</code> 如何被使用时，其意义才能显现。」 在心理治疗中，改变前必须了解为什么这一迷思使得治疗的效果大打折扣。而来源电子学的<code>黑箱研究法</code>恰恰反行其道。该方法源于第二次世界大战，用于解析敌方具有自我爆破设计的电子设备。由于无法拆开解析内部构造，困境与解析人脑相似。因此利用不同形式讯号(输入-输出)来测试「黑箱设备」功能，而不必探求细致内部构造(为什么)成为必然选择。</p><p><strong>悖论超脱与框架迁移则仰赖人类智慧与机敏。</strong> 19世纪巴黎发生一场暴动，军队受命对暴民开火以清空广场，这场可预见之惨剧被指挥官三言两语机敏避免。他命令部队进入射击位待命，大声喊道: 「各位先生女士，我奉命要对暴民开火，但是我眼前看到是一群诚实，人格高尚的市民，我请求你们离开广场，好让我们能够瞄准暴民。」话音落下，人群不到几分钟就散去了。</p><p>那么，我们如何清洗正确识别问题所在？ 如何有意识触发不可思议惊喜？ 如何摆脱无边假设而不验证的惯性？ 又该如何学习重建框架的艺术？</p><p>面对一线生机，我们还需要纵身一跃的技巧与勇气。</p><h2 id="纵身一跃">纵身一跃</h2><p>&lt;改变&gt;一书中谈及多种心理治疗的技巧与方法，如忽视，时间限制，患者语言，魔鬼约定等等，重置行动构成与思维框架来引发改变，深受启发。不过我更想谈谈自己感受最深的两种行动: <strong>时间记录，定期交流。</strong></p><p>探测复杂电子回路的黑箱方法迁移至探测人脑就是: 时间记录。其关键在于破除思维悖论，识别行动与情绪，完全接受自己。</p><p><strong>第一个困难在于需要用思维观察思维</strong> ，这就相当于你在开车时还要观察发动机状态。由于二者无法同时并行于大脑内，因此必须将思绪记忆外部化，记录下来。你通过记录可以清晰看出自己时间流向，混乱路径，那些重复出现的干扰因素。这些自然行为下难以察觉之因素，通过记录将无所遁形。如此才能有效第二序观察，跟踪改正，对抗自欺。</p><p><strong>第二个困难在于思绪与行为之惯性</strong> 。开始时总是忘记记录，记录断断续续，需要不断适应节奏以及工具磨合程度，而熟悉之后的障碍在于习以为常麻木记录而失去洞察，，因此需要定期对顽固困境反向操作。特别深层思维定式没有一定时间根本无法察觉，进步总是螺旋上升，无法一撮而就。但是只要坚持到一段时间，习惯就能化敌为友。</p><p><strong>第三个困难在于清空干扰，即时投入。</strong> 从察觉到行动，一些顽固毛病总会重复出现。外部干扰如资讯网站/黑洞应用可以通过技术隔离，但是原本行为养成的心瘾难戒，不良情绪上涌理智难控。除了充足睡眠与休息保持情绪稳定，避免「学习时长陷阱」，重在 <strong>培养仪式感</strong> 。 番茄等工具能在开始时帮助即刻投入行动，避免多想触发不良情绪影响行动。否则深陷负面循环不仅影响投入，还会使得写总结如进殓尸房，抵触情绪亦会中断记录总结之习惯</p><p><strong>最后最难在于接受。</strong> 原本以为自己可以做到100分，结果真实记录显示你只能做到10分。 你难以接受，以致对历史记录视而不见，让相同干扰不断击溃你。关键在于当前投入需要 <strong>持续正向反馈</strong>， 否则麻木记录只是新一层无助。若无法放下心中完美自己，你会把每天进度与理想状况对比，永远深陷责备难以自拔，对于混乱苗头或进步趋势熟视无睹。只有接受自我局限，接受时间局限，明白下一刻行动决定于上一刻状态，抛掉恐惧与妄想，才能真正开始改变。</p><p>定期交流分享会不仅是抗击负面情绪的节奏稳定器，更有识别思维定式，触发惊喜之功效。</p><p>不良情绪上涌总是不知不觉难以自知，因此定期与他人交流分享可以帮助破除自我封闭状态，重新适应节奏。我自己好几次深陷不良情绪无法自拔时，都是通过参加怼周会而回血。 交流亦是灵感源泉:本文即为 slack 讨论涌现所得，随后扩展成文。 而定期分享交流破除思维定式之效用，物理学家戴维·伯姆在&lt;论对话&gt;中有精彩论述:</p><blockquote><p>经验表明，如果能够坚持定期地开展对话，那么不管以什么为话题，大家所习以为常的社会传统习俗和惯例就会逐渐弱化，而每个人身上所带有的各种亚文化差异就会浮出水面。很自然地，人们就会由于各自价值观念的不同而产生摩擦和碰撞，对话的核心就在于此。正是由于这种摩擦和碰撞，使得对话者能够注意到弥漫于群体（group）之中的各种思维假定（assumption），同时也认识到自己本身所具有的思维假定。这些思维假定具有强大的支配力量，其性质与“病毒“类似，有很大的传染性。当我们认识到这点之后，就能对人类思维的分裂性和自毁性产生更新的理解。在这种新认识和新理解的基础上，我们每个人的自我保护心态就会渐趋消失，对话群体中就会萌生进而充溢一种自发的温情和友谊。</p></blockquote><p><strong>改变需要自我努力，亦需集体碰撞激励。</strong></p><h2 id="1">1</h2><p>睁眼，从行云到天花板，白回到白，白亦是白。<br>醒来，他起身摸了摸四周，伤口没有了，紧张没有了，慌忙也没有了，身边朋友面庞倒是清晰可见。走向窗台，他拉开窗，阳光缕缕散落进来，扫除片片灰暗...</p><p>慧剑斩虚忧，实观指本心。噩梦挣扎难，一醒原平常。<br>四时依然逝，日月升轮常，千里云悠行，万丈炊烟香，<br>细语荡愁肠，拥怀慰伤茫。岁寒添衣暖，努力加餐饭。</p><h2 id="tl">TL</h2><ul><li>180704 <code>15m</code> NBR-hugh adjust</li><li>180703 <code>1T</code> NBR-hugh 通读全文，调整开头结尾</li><li>180703 <code>8T</code> NBR-hugh add 一线生机，纵身一跃</li><li>180703 <code>4T</code> NBR-hugh add 千面幻境</li><li>180702 <code>4T</code> NBR-hugh add 群内群外</li><li>180701 <code>4T</code> NBR-hugh init 野兽凶猛</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenMind </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>机遇</title>
      <link href="/2018-07-01-Opportunity/"/>
      <url>/2018-07-01-Opportunity/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 知交浮萍人世间,命中机缘一线牵.  </blockquote><a id="more"></a><h2 id="机遇">机遇</h2><p>热血一箭折南墙,道旁奇葩机锋藏.<br>但凭孤意迷桃源,移步换景自微芒.<br>两心肚皮初极狭,作品信任若有光.<br>随贵人鸡犬升天,增己能力挽狂澜.<br>知交浮萍人世间,命沉机缘一线牵.</p><h2 id="tl">TL</h2><ul><li>180701 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>完美主义</title>
      <link href="/2018-06-24-perfectionism/"/>
      <url>/2018-06-24-perfectionism/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 忧镜月一场大梦,盼进展几度秋凉. </blockquote><a id="more"></a><h2 id="完美主义">完美主义</h2><p>菩提无树镜非台,虚许宏愿惹尘埃.<br>弥高弥坚困日烦,自沦地狱十八般.<br>常恐滴水难汪洋,空延时长心乖张.<br>忧镜月一场大梦,盼进展几度秋凉.<br>亿年化人犹孩性,理智搏欲自古殇.<br>心比天高难寸进,亦步亦赏信长望.</p><h2 id="tl">TL</h2><ul><li>180624 <code>2T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转行</title>
      <link href="/2018-06-18-RedirectCareer/"/>
      <url>/2018-06-18-RedirectCareer/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 弃困独桥觅旷野,始问机缘随贵人. </blockquote><a id="more"></a><h2 id="转行">转行</h2><p>比赛硬扛出作品,破困思行凝教程.<br>弃困独桥觅旷野,始问机缘随贵人.</p><h2 id="tl">TL</h2><ul><li>180618 <code>15m</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>授权</title>
      <link href="/2018-06-18-Impower/"/>
      <url>/2018-06-18-Impower/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 等人滞事皆困腐,何妨长啸先徐行 . </blockquote><a id="more"></a><h2 id="授权">授权</h2><p>人世为客几多载? 上司学师家父母.<br>未自同身共觉历, 万言始语转头空.<br>等人滞事皆困腐, 何妨长啸先徐行.<br>勇担己行主翁责, 巧思演练预恶果.</p><h2 id="tl">TL</h2><ul><li>180618 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>信息过载</title>
      <link href="/2018-06-18-OverInfo/"/>
      <url>/2018-06-18-OverInfo/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 枉遍他者万般解,无益吾心一点明. </blockquote><a id="more"></a><h2 id="信息过载">信息过载</h2><p>本欲踏歌揽明月,奈何千指迷人眼.<br>枉遍他者万般解,无益吾心一点明.<br>不若立己微芒行,复问善循渐弘光.<br>跬步芥进破迷津,相较千指正月明.</p><h2 id="tl">TL</h2><ul><li>180618 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>卡顿</title>
      <link href="/2018-06-11-Stuck/"/>
      <url>/2018-06-11-Stuck/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 始问不清答亦渺, 自寻彷徨疑无路. </blockquote><a id="more"></a><h2 id="卡顿">卡顿</h2><p>周刊发布几多时, 难得怼索码病处.<br>始问不清答亦渺, 自寻彷徨疑无路.<br>记实录明究阻顿, 以退为进又一村.<br>将军满背立众旗, 皆依时账显自明.</p><h2 id="tl">TL</h2><ul><li>180611 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>社会形象</title>
      <link href="/2018-06-11-SocialImage/"/>
      <url>/2018-06-11-SocialImage/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">  恬然平常阶边石,自患女娲补天余.   </blockquote><a id="more"></a><h2 id="社会形象">社会形象</h2><p>纤手抚琴三分钟,青丝千愁百转回.<br>恬然平常阶边石,自患女娲补天余.<br>荒唐戏梦只作伪,及行方解其中味.<br>今朝求己水穷处,他日凌峰云起时.</p><h2 id="tl">TL</h2><ul><li>180611 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>习得性无助</title>
      <link href="/2018-06-04-LearnedHelplessness/"/>
      <url>/2018-06-04-LearnedHelplessness/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 师友昆仑肝胆助,奈何自绝求生路. </blockquote><a id="more"></a><h2 id="习得性无助">习得性无助</h2><p>开口求助大恐怖,吾乃完人一场梦.<br>心造绝境溺危海,身僵形困负累山.<br>师友昆仑肝胆助,奈何自绝求生路.</p><p>何意等闲空悲切,不若自曝破虚障.<br>罢演苦情独角戏,昨失惧明皆迷妄.<br>行成有果失有问,中二当下平常心.</p><h2 id="tl">TL</h2><ul><li>180605 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>陶崇园之悲</title>
      <link href="/2018-04-07-BeatBad/"/>
      <url>/2018-04-07-BeatBad/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">  遭受欺凌时的自我保护建议 </blockquote><a id="more"></a><h2 id="始末">始末</h2><p>陶崇园跳楼事件,若无有力证据,即使舆论闹得再大,亦要不了了之.</p><p><strong>证据是最大的人道.</strong></p><p>若真以舆论断案,取代强权暴力的便是暴民暴力:网络暴力与道德绑架大家也并不陌生的.陶同学自杀引起的舆论风暴,就像以 ADC 死亡开局的团战,苦主阵亡,证据缺失,输出乏力.这是一场陶同学跳楼的那一刻起就注定的悲剧:陶家人肝肠寸断,其次苦了武理其他老师同学,再有此次舆论伤害将成为武理未来人才争夺的巨大阻碍,对学校发展造成及其恶劣影响...</p><p><strong>如何避免悲剧再次发生?</strong></p><p>宏观上,是研究生导师制度的问题,全责带来全权.导师欺压学生,致使学生跳楼并不只是武理一家的问题,如何推进制度改革是国家与所有高等学校的考量,最近频发的丑闻有可能成为改革契机.</p><p>但微观上,<strong>作为学生,作为弱势方,如何选择导师,如何防范变态,值得一说.</strong></p><h2 id="建议">建议</h2><h3 id="小心外在诱惑">小心外在诱惑</h3><p>悲剧之始,陶选择王攀正是因为许诺的诱惑.这个诱惑就和渣男骗女生说&quot;我永远只爱你&quot;的谎言一样诱人而险恶,一步一步地引你坠入深渊.道德和诚信只能是自我要求,不会是恶人不施恶的理由.师徒,伴侣,密友这般的亲密关系信任风险高昂,决定时不要只看人说了什么,有什么高大上的名头,更要去看他做什么:</p><ul><li>有什么作品,能力如何?</li><li>是何秉性,是否和你脾气志趣相投?</li><li>看他如何对待亲近的人,周围人对他什么评价.</li></ul><p>有成本意识,无非分要求,审慎做出选择,可以很大程度避免危险.</p><h3 id="磨炼内在心智">磨炼内在心智</h3><p>理工同学往往木讷单纯,工具理性强,而广义理性弱,容易偏激.</p><p>社会不是乌托邦,陋习传统到处有,年轻人受委屈受欺负都是很正常的.当时觉得事情很大,但是过去了回头看也不过如此.做成任何事情,没有不困难不受挫的,情绪浮杂无用,冷静才有出路.</p><p>心志的磨炼一方面需要 <strong>经历与实践</strong>,比如参加比赛,参与社会调查,真正了解现实复杂.另一方更需 <strong>温养自己的精神花园</strong>,读诗文,读传记,学习基本心理认知知识,定期自我交谈,又或者与师友交谈,为自己提供一个暂时失意的避风港湾.</p><p>人生尚长,整顿再来.</p><h3 id="习得斗恶技巧">习得斗恶技巧</h3><p>人生漫漫,千防万算,总有几率碰到变态,以漂亮女生和老实人为甚.真碰上会很痛苦,努力那么久,读了要被骚扰恶心,不读学位没了白考.如此两难困境是陶自杀直接原因.但如此于心理上自设绝境不妥,未意识到敌人也是人,也有弱点,还有很大空间可周璇.</p><p>首先,解决关键是 <strong>胆气</strong>. 侵犯绝不会只发生一次,也不会自己停歇.我们要在侵犯开始时便敢于斗争,一让便是暴露自己软弱,让恶人有机可乘.你的退让会助长敌人为恶之声焰,当初正是东北三省不抵抗快速沦陷才让日本将侵华提升为国策,因为成本太低了,好处太大了.亦不用怕报复,光脚不怕穿鞋的,大不了鱼死网破,我研究生不要了,你教授也别想当了,看看孰轻孰重.要让恶人知道你的厉害,轻易不敢进犯.</p><p>其次,具备 <strong>取证意识</strong>.雁过留声,行过留痕,要技巧性地及时取证: 聊天记录,录音录像,向律师咨询证据的效度.只要证据清晰,直接见校长.即使学校包庇,也必然会换导师.要把伤害返还回去,让恶人心焦,让恶人内心惊疑悚然.</p><p>最后,请一定一定 <strong>珍惜生命</strong> .你一死,你之痛苦与恶人恶行均成迷,余亲者痛而仇者快.我们要正视恶人,打得赢打,打不赢就跑,向他人,向社会求助,再不行以命相胁:当真同归于尽?! 要使敌人胆寒,与你协商,去真正解决问题,而不是自己缴械投降,自绝生路.否则便是恶人依然逍遥法外,为祸人间,独余亲者怆然涕下,终日以泪洗面.</p><h2 id="终愿">终愿</h2><p>可言皆上,愿大家得遇良人,悲剧不再.</p><p>今日清明,默悼陶崇园同学,望陶姐与陶母节哀.</p><h2 id="tl">TL</h2><ul><li>180407 <code>20m</code> NBR-hugh midified</li><li>180405 <code>3T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lesson </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>愤</title>
      <link href="/2018-04-04-WHUT/"/>
      <url>/2018-04-04-WHUT/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">  夜闻噩耗,心绪难平,遂有此诗 </blockquote><a id="more"></a><h2 id="武理-崇园">武理·崇园</h2><p><strong>悲吾理工大</strong>,师言仍在耳,卷声犹可闻.数载英杰出,誉毁于一人.<br><strong>哀吾崇园生</strong>,壮志本凌云,落地一声闷.仇者犹未损,亲者断肠轮.<br><strong>奋吾理工人</strong>,境遇总有低,心志不可夺.穷知力学行,闻鸡夜披星.<br><strong>告汝观者众</strong>,流言蜚语迷,但索实据依.腐老终将去,新世创年青.<br>死者血未冷,鼎沸伤恒存.唯愿长夜终开眼, 善果慰英魂.</p><h2 id="tl">TL</h2><ul><li>180404 <code>10m</code> NBR-hugh modified</li><li>180403 <code>2T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>怼</title>
      <link href="/2018-04-02-DebugUself/"/>
      <url>/2018-04-02-DebugUself/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">  明心致事,唯有自怼 </blockquote><a id="more"></a><h2 id="怼">怼</h2><p>世多纷扰,红尘魔深.<br>欲贪千万,实果无一.<br>念纷千里,行滞无毫.<br>自失自忘,大梦晚醒.</p><p>欲克自欺,唯记时录.<br>剔透意行,明明吾心.<br>欲克瘫痪,最小启行.<br>复为不绝,跬步千里.</p><p>学校数载,纸上谈兵.<br>欲得真知,唯战躬行.<br>惑深才通,行阻方明.<br>沉心善问,复用笃行.</p><p>万物逆旅,百代过客.<br>渊知如山,碎识如海.<br>重复无得,当予机器.<br>由艰创新,人自神明.</p><p>学海无涯,道阻且长.<br>师友对心,砥砺渐进.<br>意行善果,日周月年.<br>分进合击,守望前行.</p><p>万物复苏,四月天开.<br>怼圈重启,征途新迈.<br>唤吾同志,欲向何处!?<br>唤吾友来,更待何时!?</p><ul><li>PS: 怼圈重启,所作宣传词.</li></ul><h2 id="tl">TL</h2><ul><li>180402 <code>4T</code> NBR-hugh init &amp; modify</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>定</title>
      <link href="/2018-03-26-Fix/"/>
      <url>/2018-03-26-Fix/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 世多纷扰,吾心自足 </blockquote><a id="more"></a><h1>定</h1><p>食粗知味美,被褐犹怀玉.<br>念藏贪与嗔,万贯贫如洗.<br>片身居一隅,神游探须弥.<br>若行天一方,山海隔远川.<br>识流畅气宁,情志泊意亭.<br>千沙万树过,不动吾心一.</p><h2 id="tl">TL</h2><ul><li>180326 <code>2T</code> NBR-hugh 修改发布</li><li>180325 <code>1T</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>惜</title>
      <link href="/2018-03-23-Cherish/"/>
      <url>/2018-03-23-Cherish/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 子女父母,缘孽轮回</blockquote><a id="more"></a><h1>惜</h1><p>娇颜妄怨凭肆意,<br>白骨深兮沁离痕.<br>昔日儿女今父母,<br>无忧回尝无尽苦.</p><h2 id="tl">TL</h2><ul><li>180325 <code>15m</code> NBR-hugh 修改发布</li><li>180322 <code>15m</code> NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python 开发环境 (conda=&gt;Pipenv)</title>
      <link href="/2018-03-17-Pipenv/"/>
      <url>/2018-03-17-Pipenv/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 如何设置干净的 python 开发环境? </blockquote><a id="more"></a><h2 id="激发">激发</h2><ul><li>工欲善其事,必先利其器,愈学愈觉得环境干净的重要性</li><li>Q. 如何控制开发环境,形成干净的 <code>requirements.txt</code>?<ul><li>触发:<a href="https://github.com/JeetChan/Py101-004/blob/master/Chap3/note/chap3_note.md#%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">Py101-004/chap3_note.md at master · JeetChan/Py101-004</a><ul><li>为应用开发虚拟环境,保证干净的开发环境/工作环境</li><li>生成 requirements.txt 文件:<code>pip freeze &gt;requirements.txt</code></li><li>对比发现自己的环境极其复杂,不相关的包也被列了出来</li><li>混杂的环境意识到割离不同开发环境的必要性</li></ul></li></ul></li></ul><h2 id="参考">参考</h2><ul><li>[Python环境出坑记 | 浚宇的博客]<a href="http://blog.junyu.io/posts/0707-python-env-config.html" target="_blank" rel="noopener">http://blog.junyu.io/posts/0707-python-env-config.html</a></li><li><a href="https://github.com/DebugUself/du4proto/wiki/HBPythonOperationEnv" target="_blank" rel="noopener">HBPythonOperationEnv · DebugUself/du4proto Wiki</a></li><li><a href="http://docs.python-guide.org/en/latest/" target="_blank" rel="noopener">The Hitchhiker’s Guide to Python! — The Hitchhiker's Guide to Python</a></li></ul><h2 id="探索">探索</h2><ul><li>#I  1 阅读 <a href="http://blog.junyu.io/posts/0707-python-env-config.html" target="_blank" rel="noopener">Python环境出坑记 | 浚宇的博客</a><ul><li><blockquote><p>不怪 anaconda 本身，如果你是数据科学工作者，并不希望被环境折腾，利用这样的套件是避免底层环境配置的好办法。但是对于python 的开发者来说，了解python 的生态系统，能够自己动手配置适合自己开发的环境还是很有必要的。</p></blockquote></li></ul></li></ul><h3 id="q-mac-的文件结构目录含义">#Q mac 的文件结构目录含义?</h3><ul><li>#A google <code>mac directory</code><ul><li>=&gt; <a href="http://osxdaily.com/2007/03/30/mac-os-x-directory-structure-explained/" target="_blank" rel="noopener">Mac OS X Directory Structure explained</a></li></ul></li></ul><h3 id="q-shell-的工作原理是什么">#Q shell 的工作原理是什么?</h3><ul><li><p>#A google :<code>how shell work</code></p><ul><li>=&gt; <a href="https://oskarth.com/unix01/" target="_blank" rel="noopener">What is a shell and how does it work? · OSKAR</a></li><li>=&gt; <a href="https://pdos.csail.mit.edu/6.828/2014/xv6/book-rev8.pdf" target="_blank" rel="noopener">xv6 - DRAFT as of September 3, 2014 - book-rev8.pdf</a><ul><li><blockquote><p>The shell is an ordinary program that reads commands From the user and executes them.and is the primary user interface to traditional Unix-like systems.</p></blockquote></li><li><p><a href="https://ws2.sinaimg.cn/large/006tNc79gy1fpf477m3epj31120ba75m.jpg" target="_blank" rel="noopener">like this</a></p></li><li><p>术语:</p><ul><li>xv6<ul><li>unix 原始操作程序,了解操作程序的好开端</li></ul></li><li>Unix-like Interface<ul><li>类 Unix交互界面,其实就是命令行</li></ul></li><li>Kernel 的传统结构<ul><li><strong>传统结构</strong>:一个特殊的程序提供运行其他所有程序的服务</li></ul></li><li>Process<ul><li>进程</li><li>a running program has memory contain<ul><li>instruction<ul><li>指令,执行程序计算</li></ul></li><li>data<ul><li>数据,即程序执行的变量</li></ul></li><li>stack<ul><li>堆栈,组织程序的调用</li><li>organize procedur call</li></ul></li></ul></li></ul></li><li>Procedure call<ul><li>程序调用</li><li>system call<ul><li>系统调用,调用 kernel 的服务</li></ul></li></ul></li><li>User Space vs Kernel Space</li></ul></li></ul></li><li>=&gt;<a href="http://www.linuxforums.org/forum/newbie/165104-how-does-shell-work.html" target="_blank" rel="noopener">How does the shell work</a><ul><li><blockquote><p>the sequence of events</p></blockquote><ul><li>1)bash calls fork() to create a new process.</li><li>2)The parent process calls wait() and goes to sleep.</li><li>3)More or less simultaneously the child process calls exec() to switch to the specified program.</li><li>4)The program runs and outputs to the screen.</li><li>5)The program exits. The kernel notifies bash.</li><li>6)bash wakes up and prints a new prompt.</li></ul></li></ul></li></ul></li><li><p>#O shell 就是一段程序,功能与图形界面基本相同,实现人与计算机交互的媒介,图形界面能做的事情 shell 都能做,而 shell 更利于日常操作的自动化</p><ul><li>个人理解:其实核心就2个动作<ul><li>1.位置: 找到执行文件</li><li>2.动作: 执行文件,返回结果</li></ul></li></ul></li></ul><h3 id="q-console-terminal-与-shell-的区别-是什么">#Q Console,Terminal 与 Shell 的区别 是什么?</h3><ul><li><p>#I 参考</p><ul><li>=&gt; <a href="https://www.zhihu.com/question/20388511" target="_blank" rel="noopener">Terminal 和 Console 的区别是什么？ - 知乎</a></li><li>=&gt; <a href="https://askubuntu.com/questions/506510/what-is-the-difference-between-terminal-console-shell-and-command-line" target="_blank" rel="noopener">What is the difference between Terminal, Console, Shell, and Command Line? - Ask Ubuntu</a></li></ul></li><li><p>#I 细分</p><ul><li><p>Terminal</p><ul><li>text input/output environment</li><li>可以多个</li><li><blockquote><p>在古老的年代，一个机构可能只有一台主机，而机构的职员使用电传打印机（Teletypewritter 又简称为tty）通过串口连接到主机。后来人们又在电传打印机的基础上进行了改进，程序的输出不再是打印到纸带上而是显示在荧幕上，后来还支持彩色显示，这样的设备后来被称为终端（Terminal）。一台主机可以有很多个终端，早期的主机只支持串口线的终端，对应的设备叫做串口终端（Serials Terminal），后来又发展出了伪终端，以便于支持GUI，后来串口终端渐渐被图形界面的伪终端取代，也就是我们今天所说的<strong>终端</strong>。</p></blockquote></li></ul></li><li><p>Console</p><ul><li>physical terminal,包含计算机控件的仪表盘</li><li>只有一个</li><li>但是在主机的系统启动完成之前，终端是不能连接到主机上的。为了能记录出主机开机过程的日志，也便于在主机出故障无法启动操作系统时进行检修维护，有多了一个叫做控制台的设备。一台主机有且只能有一个<strong>控制台</strong>。文件主机的重要日志，比如开机关机的日志和记录，重要应用程序的日志，都会输出到控制台来。</li></ul></li><li><p>Shell</p><ul><li>command line interpreter<ul><li>User &lt;=&gt; Kernel(Shell) &lt;=&gt; Hardware</li><li><blockquote><p>用户通过终端输入一些命令，而这些命令计算机读不懂，因此shell是一种解释程序，它把用户写的命令，比如ls，翻译成计算机能懂的二进制语言，计算机明白了就返回文字，输出到控制台，控制台再通过终端展现给用户，这时终端就有了输入输出的功能。</p></blockquote></li></ul></li></ul></li></ul></li><li><p>#O 小结</p><ul><li>用户在 Terminal 输入文本/命令,经过 Shell 的解释翻译成计算机能懂的二进制语言,执行指定程序并返回信息,具体的执行记录记录在 Console 中,而返回信息会再返回Terminal 呈现给用户.</li></ul></li></ul><h3 id="q-如何任意配置独立适用的干净的开发环境">#Q 如何任意配置独立适用的干净的开发环境?</h3><ul><li><p>#Q 0. 是否可以不卸载 connada  而使用pipenv?</p><ul><li>#A google <code>conda pipenv</code></li><li>=&gt;<a href="https://github.com/pypa/pipenv/issues/1469" target="_blank" rel="noopener">pipenv with some packages from conda · Issue #1469 · pypa/pipenv</a><ul><li><blockquote><p>Conda is a system package manager that happens to specialize mostly in Python packages</p></blockquote></li><li><p>#O 其实可以的,所有的包管理工具都是程序,只有 shell 命令才会激活,只是相互交叉使用时会出现问题,单独使用时没有问题的</p></li><li><p>#O 还可以设置 pipenv 使用 conda 里的 python,conda 里的包,不过实际运行依旧会错,分开用较好</p></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ pipenv --python /path/to/condaenv/python --site-packages</span><br><span class="line">$ pipenv install</span><br></pre></td></tr></table></figure></li></ul></li><li><p>#A 1.pipenv下载尝试</p><ul><li>#A 命令行运行 <code>brew install pipenv</code><ul><li><p>#X <strong>Error</strong>: Permission denied @ dir_s_mkdir - /usr/local/Frameworks</p><ul><li>=&gt;<a href="https://github.com/Homebrew/homebrew-core/issues/19286#issuecomment-336164523" target="_blank" rel="noopener">Permissions issue when linking python3 · Issue #19286 · Homebrew/homebrew-core</a></li><li>#O</li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;sudo mkdir /usr/local/Frameworks</span><br><span class="line">&gt;sudo chown $(whoami):admin /usr/local/Frameworks</span><br></pre></td></tr></table></figure></li><li><p>#X <strong>ModuleNotFoundError</strong>: No module named 'setuptools'</p><ul><li>=&gt;<a href="https://stackoverflow.com/questions/14426491/python-3-importerror-no-module-named-setuptools" target="_blank" rel="noopener">Python 3: ImportError &quot;No Module named Setuptools&quot; - Stack Overflow</a>:-)<ul><li>#I  <code>sudo apt-get install python3-setuptools</code><ul><li>#X mac 上没有apt-get<ul><li>#O<code>conda update setuptools</code></li></ul></li></ul></li></ul></li><li>#O 重新 运行<code>brew install pipenv</code>,成功!<ul><li>成功下载: /usr/local/Cellar/pipenv/11.8.0: 1,305 files, 19MB</li></ul></li></ul></li></ul></li></ul></li><li><p>#A 2. pipenv 试用</p><ul><li>#A 创建虚拟环境 <code>$ pipenv --three</code></li><li>#X 系统报错,报错信息摘要如下</li><li>#A 尝试其他命令<code>pipenv update</code>,报错依旧<ul><li><p><strong>Warning</strong>: the environment variable LANG is not set!</p><ul><li><code>export LANG=en_US.UTF-8</code></li></ul></li><li><p><strong>ValueError</strong>: unknown locale: UTF-8</p><ul><li>=&gt; <a href="https://github.com/pypa/pipenv/issues/187#issue-204777814" target="_blank" rel="noopener">ValueError: unknown locale: UTF-8 · Issue #187 · pypa/pipenv</a><ul><li>#O add below to <code>~/.zshrc</code></li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export LC_ALL=en_US.UTF-8</span><br><span class="line">export LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>TypeError</strong>: 'NoneType' object is not subscriptable</p><ul><li>上一个错误消除了,这个错误自然消失</li></ul></li></ul></li><li>#O 可以成功运行</li></ul></li><li><p>#A 3. pipenv 管理环境学习</p><ul><li>#Q 关键问题: 如何创建新环境? 所谓的开发的环境包括哪些部分?<ul><li>#O  所谓的环境即是依赖,即该程序正常运行所需要的组件</li><li>#O 原始的依赖管理有2种方式<ul><li>Simple RequirementsA list of top-level dependencies a project has, often without versions specified.<ul><li>清晰展现 top-level Package, 但是太简短 hold 不住版本变化</li></ul></li><li>Exact RequirementsA complete list of all dependencies a project has, each with exact versions specified.<ul><li>最佳实践,但是<code>$ pip install --upgrade</code>某些模块时体验不佳</li></ul></li><li>pipenv 解决了这些问题<ul><li><code>lock</code>展示所有依赖包,并且可以实现任意的添加删除</li><li><code>graph</code> 可以按层级展示所有依赖包</li></ul></li><li>Amazing!</li></ul></li></ul></li><li>#A 查看 Readme<ul><li>=&gt; <a href="https://github.com/pypa/pipenv" target="_blank" rel="noopener">pypa/pipenv: Python Development Workflow for Humans.</a>readme 的说明及其详细贴心,以下的命令来自自我的实验尝试<ul><li>#I 移动到项目所在位置:<code>~/newproject</code></li><li>#I 尝试创建环境<ul><li><p>初始的 py3环境 <code>pipenv --three</code></p><ul><li>#X 错误代码摘要  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ERROR: The executable /Users/NBR-hugh/.local/share/virtualenvs/NBR-hugh-hUsIvz3I/bin/python3.6m is not functioning</span><br><span class="line">ERROR: It thinks sys.prefix is &apos;/Users/NBR-hugh&apos; (should be &apos;/Users/NBR-hugh/.local/share/virtualenvs/NBR-hugh-hUsIvz3I&apos;)</span><br><span class="line">ERROR: virtualenv is not compatible with this system or executable</span><br><span class="line"></span><br><span class="line">Virtualenv location:</span><br><span class="line">Warning: Your Pipfile requires python_version 3.6, but you are using None (/bin/python).</span><br></pre></td></tr></table></figure></li></ul><ul><li>#I conda 的 python 运行起来还是有问题的,还是用 brew 下载依赖时下载的 python 好了<ul><li>#A google <code>how to change python path on mac</code></li></ul></li><li>#A 修改 path ,替换 conda 的 python<ul><li>打开配置文件 <code>subl ~/.zshrc</code>,将原本的<ul><li><code>export PATH=~/anaconda3/bin:$PATH</code></li></ul></li><li>失效成 =&gt; <code>#export PATH=~/anaconda3/bin:$PATH</code></li></ul></li></ul><ul><li>#O  <code>pipenv --three</code> 成功运行</li></ul></li></ul></li><li>#I 演示视频中的基本操作<ul><li><p>1.创建基本虚拟环境</p><ul><li><code>pipenv --two</code>  py2 基本环境</li><li><code>pipenv --three</code> py3基本环境</li></ul></li><li><p>2.安装包</p><ul><li><code>pipenv install requests</code> 安装 requests 包</li><li><code>pipenv uninstall requests</code> 卸载 requests 包</li><li><code>pipenv uninstall --all</code>卸载所有包</li><li>批量安装?#W<ul><li><blockquote><p>Streamline development workflow by loading <code>.env</code> files.</p></blockquote></li></ul></li></ul></li><li><p>3.查看总环境文件</p><ul><li><code>cat Pipfile</code> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[[source]]</span><br><span class="line"></span><br><span class="line">url = &quot;https://pypi.python.org/simple&quot;</span><br><span class="line">verify_ssl = true</span><br><span class="line">name = &quot;pypi&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[packages]</span><br><span class="line"></span><br><span class="line">requests = &quot;*&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[dev-packages]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[requires]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>4.将安装的包设为虚拟环境的依赖 <code>pipenv lock</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Locking [dev-packages] dependencies…</span><br><span class="line">Locking [packages] dependencies…</span><br><span class="line">Updated Pipfile.lock (7b8df8)!</span><br></pre></td></tr></table></figure></li><li><p>5.查看虚拟环境的依赖文件</p><ul><li><p>查看文件详细内容 <code>cat Pipfile.lock</code></p></li><li><p>简单查看 <code>pipenv lock -r</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">certifi==2018.1.18</span><br><span class="line">chardet==3.0.4</span><br><span class="line">idna==2.6</span><br><span class="line">requests==2.18.4</span><br><span class="line">urllib3==1.22</span><br></pre></td></tr></table></figure></li><li><p>展现美观的依赖图谱<code>pipenv graph</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">requests==2.18.4</span><br><span class="line">  - certifi [required: &gt;=2017.4.17, installed: 2018.1.18]</span><br><span class="line">  - chardet [required: &gt;=3.0.2,&lt;3.1.0, installed: 3.0.4]</span><br><span class="line">  - idna [required: &gt;=2.5,&lt;2.7, installed: 2.6]</span><br><span class="line">  - urllib3 [required: &gt;=1.21.1,&lt;1.23, installed: 1.22]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>6.激活进入虚拟环境</p><ul><li><code>pipenv shell</code><ul><li><p>生成当前环境需求文件<code>pip freeze</code></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">certifi==2018.1.18</span><br><span class="line">chardet==3.0.4</span><br><span class="line">idna==2.6</span><br><span class="line">requests==2.18.4</span><br><span class="line">urllib3==1.22</span><br></pre></td></tr></table></figure></li><li><p>离开虚拟环境<code>exit</code></p></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="tl">TL</h2><ul><li>180316 1T NBR-hugh 整理发布</li></ul>]]></content>
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pipenv </tag>
            
            <tag> python </tag>
            
            <tag> env </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>母忆 · 童年</title>
      <link href="/2018-03-13-MomChildhood/"/>
      <url>/2018-03-13-MomChildhood/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 夜聊小纪,记忆剪影</blockquote><a id="more"></a><p>留存的记忆中,饥饿与哭泣晕染了夜,一点点快乐如星星般珍贵.</p><h2 id="泪">泪</h2><p>N浦Z厝,生她养她的地方.那里重男轻女成风,她出生时又逢饥荒,家家无米下锅.她在床围阴影下饿得直哭:声泪俱下,绕梁三日,无人理会.哭累了就睡,睡醒了接着哭.至于后来怎么,熬过来的她也不知道了,这是她后来稍微大些,邻家阿姆告诉她的.不过似乎也没什么改变:曾外祖母偏心小舅和大舅,任何好吃食都没她份.每次放学回家,她放下书包就往外跑:实在没法子,心里着实馋得紧,眼不见为净.如此日复一日,不争不抢,知足常乐,已然天性.</p><p>&quot;好歹是养大了,我没被扔掉.&quot; 她是这么说的,声音温柔似水,如村后那条江,不知掩埋了多少沉默. <strong>滩下江水无声流,其间多少孩提泪.</strong> 陈规陋俗,粗粝如刀.不敢想,大抵只能感谢上苍保佑了.</p><h2 id="疼">疼</h2><p>除了饿到哭,还有饿到痛.因为营养不良,她总是人群里最小个.村里人遇见她都说:小不点,这么久了怎么也没见你长大呢? 她小眼一抬: &quot;我要慢慢长!&quot; 久而久之,大家都叫她&quot;慢慢长&quot;.</p><p>&quot;即使是现在回村里,还是有人这么叫我了.&quot;她说着这话,眉眼弯弯,忍不住地笑,大概是被儿时的自己可爱到了.我也跟着笑了,确实可爱.</p><p>只是到了十五岁,突然个子就蹿上去.好家伙,一年长了二十多厘米,营养又跟不上,她算是明白了什么叫真正的疼到骨子里.</p><p>&quot;疼,没有一处不疼.&quot;过了三十多年了,想在回想,她都忍不住滋咧开嘴,灵魂都打个颤.</p><h2 id="愁">愁</h2><p>除了饿之外,她最愁的大概是学习了.那时外婆是村小老师,提溜着她去.她要么被扔在最前排,要么就没有位置,不管不顾被丢在最后排.拼音,加减法,样样不会,她大概就是这时候开始觉得自己笨的.对于那时的小可爱来说,打击可不小呢.</p><p>&quot;你二年级时回来问我问题,我可愁坏了,丧着脸对你说:'儿子啊,问题要在学校里问老师,别来问我,我不会呀.'&quot; 她现在提起都满是无奈,&quot;还好后来你真的没再来问我了,真是沾了老师的光了.&quot; 嗯...真是...无比感谢老师了! : D</p><p>好在这打击没多久.外公一声令下:&quot;别读了,回来种地.&quot;从此,育苗,打水,弄蘑菇,洗碗,扫地,烧菜....如此日复一日,日日干到虚脱乏倦.</p><p>一方忧愁走了,又来了另一方.</p><h2 id="乐">乐</h2><p>贫乏劳累日子里,唯一欢喜,是骑车.</p><p>&quot;嘿嘿,那时候我人还没自行车高呢,就这样哧溜侧着划出去,后面担着两担子菜,一路骑进城.&quot;她说着,脸上还洋溢着刚骑上车时的兴奋劲.<strong>那股子得意,无任何岁月之刃凿痕,快乐简单如初.</strong></p><p>一直到了十八岁,她实在无法忍受,央求着曾外祖母:&quot;阿姆,你让我去打工好不好,你看好多人都去啦! 工资不少的哟,领回来,咱们对半分嘛!~&quot;可怜兮兮地作着揖.曾外祖母真的答应了,不知是因为她,还是因为钱.</p><p>&quot;第一个月工资800多,那时候可把我开心坏了,迫不及待地就去买了心心念念的耳环,被你外公狠骂了一顿.&quot;她吐了吐舌头,&quot;你妈胆小,特怕,但是是止不住真喜欢嘛.&quot; 嗯,臭美大概真是女生天性了,不分年龄种族,不论富有贫穷,不惧强权压迫...</p><h2 id="人">人</h2><p>也是在那个厂里,她遇到了自己三十多年的挚友,遇到了每天晚上蹲守她的我爸.</p><p>&quot;那时和你阿姨是真的要好,天天互相串门吃饭睡觉.那段时间大概是我最开心的时候了.&quot;她说起来眼里闪着光.&quot;还遇到你爸,每晚都守在厂门口,等着我下班,手里递过东西来:'花生米,吃吧'&quot;她哭笑不得,&quot;太老实太傻了,也没想到他坚持了三年......&quot;</p><p><strong>&quot;时光要是能停在那个时候就好了&quot;</strong> 她没说,我看出来的.</p><p><strong>夜色茫茫,江还是三十年前那条江,人却再也回不去了.</strong></p><h2 id="tl">TL</h2><ul><li>180312 <code>4T</code> 念起初稿</li><li>180313 <code>1T</code> 写匠修改,通读修改</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Memory </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>障</title>
      <link href="/2018-01-27-codeSence/"/>
      <url>/2018-01-27-codeSence/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 深夜codeing, 有感而言</blockquote><a id="more"></a><h1>明心</h1><p>英文搜索,demo至上.<br>穷尽徒劳,演绎为王.<br>代码不跑,皆空妄想.<br>记为思录,遇难不慌.<br>本无一物,心障使然.<br>察之入微,记之以观.<br>如磋如磨,日渐其长.</p>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>悔</title>
      <link href="/2018-01-25-regret/"/>
      <url>/2018-01-25-regret/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 争此念,争此日,争此生!</blockquote><a id="more"></a><h1>一念 ?</h1><ul><li>醒后悔昏时:<ul><li>可惜只是梦.</li><li>怎么又睡迟?</li><li>为何又醒晚?</li></ul></li><li>昏前悔醒时:<ul><li>为何又懈怠?</li><li>怎么又分心?</li><li>要是梦多好.</li></ul></li><li>一念灭.</li></ul><h1>一日 ?</h1><ul><li>午悔晨:<ul><li>当有之意,不多坚定?</li></ul></li><li>晚悔午:<ul><li>当有之行,不多慎笃?</li></ul></li><li>夜悔晚:<ul><li>当有之善,不多改过?</li></ul></li><li>晨悔昨夜:<ul><li>当有之果,失之奈何!?</li></ul></li><li>一日失.</li></ul><h1>一生 ?</h1><ul><li>小学悔幼园:<ul><li>作业近无,</li><li>何不多嬉闹?</li><li>哭声几多,</li><li>欢笑甚少.</li></ul></li><li>中学悔小学:<ul><li>为何不用功?</li></ul></li><li>大学悔中学:<ul><li>为何还不用功?</li></ul></li><li>工作悔大学:<ul><li>为何徒劳用功?</li></ul></li><li>中年悔青年:<ul><li>红尘勘破,</li><li>用个屁功!</li></ul></li><li>老年悔中年:<ul><li>时光易逝,</li><li>何不勇攀登?</li><li>幸福甚少,</li><li>虚度几多.</li></ul></li><li>一生猝.</li></ul><h1>何如!?</h1><ul><li>苦,<ul><li>一念灭,念念难生;</li><li>一日失,日日无得;</li><li>一生猝,生生皆悔恨;</li></ul></li><li>实,<ul><li>一日之得失,在念念明灭,</li><li>一生之无憾,在日日累得.</li></ul></li><li>故,<ul><li>争一念,乃争一日,乃争一生.</li></ul></li><li>而,<ul><li>正当时!</li><li>争此念,争此日,争此生!</li><li>莫失莫忘,莫悔莫憾.</li><li>行有所止,念有所善.</li></ul></li></ul><h2 id="timelog">Timelog</h2><ul><li>180125 <code>1T</code> 初稿成</li><li>180125 <code>2T</code> 修改发布</li></ul>]]></content>
      
      <categories>
          
          <category> Write </category>
          
      </categories>
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Anaconda &amp; JupyterNotebook 探索</title>
      <link href="/2017-08-14-anaconda/"/>
      <url>/2017-08-14-anaconda/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"> 编程环境与笔记工具初探 </blockquote><a id="more"></a><h3 id="question">Question</h3><ul><li>如何查看自己电脑中安装了哪些版本的 Python ？<ul><li><code>$ pyenv versions</code></li></ul></li><li>如何切换、运行不同版本的 Python 呢？<ul><li>使用版本与包管理工具如 Anaconda,pyenv等来进行管理<ul><li><code>$ pyenv local &lt;version&gt;</code></li><li><code>$ source activate ~/py27</code></li></ul></li></ul></li><li>Python2 和 Python3 对应的开源包、软件包是否可以通用？<ul><li><em>不能,下载的开源宝和软件包下载在对应语言文件目录下</em></li></ul></li><li>Anconda 是什么?<ul><li>包管理</li><li>不同版本python环境管理</li></ul></li><li>Jupyter Notebook是什么?<ul><li>可运行、可交互的在线工具，可把代码和笔记舒爽地呈现在同一个页面，并导出为 .ipynb .md .py 等格式.借助 nbviewer社会化分享</li></ul></li></ul><h3 id="action">Action</h3><h4 id="1-寻找anaconda官方文档">1. 寻找Anaconda官方文档</h4><ul><li><a href="https://docs.continuum.io/anaconda/install/mac-os" target="_blank" rel="noopener">Installing on macOS | Continuum Analytics: Documentation</a></li></ul><h4 id="2-安装-anaconda3">2. 安装 Anaconda3</h4><ul><li>两种安装方式:<code>图形界面安装</code>与<code>命令行界面安装</code></li><li>两种版本 <code>PY2.7</code> 与 <code>py3.6</code>(根据默认环境选择)</li><li>选择 <code>命令行界面安装</code>,<code>py3.6</code>版本<ul><li><p>01:下载命令行版安装包<a href="https://www.continuum.io/downloads#macos" target="_blank" rel="noopener">macOS installer</a></p></li><li><p>02:[可选]  cryptographic hash verification(哈希值验证)</p><ul><li>到达安装包所在文件夹<ul><li><code>$ cd ~/Downloads</code></li></ul></li><li>验证安装包的哈希值<ul><li><p>下载包的哈希值</p><pre><code> $ md5 Anaconda3-4.4.0-MacOSX-x86_64.sh   MD5 (Anaconda3-4.4.0-MacOSX-x86_64.sh) = 3958ac6cb84731e560dd833256aa5b15</code></pre></li><li><p>对比官方文档给出的<a href="https://docs.continuum.io/anaconda/install/hashes/Anaconda3-4.4.0-MacOSX-x86_64.sh-hash" target="_blank" rel="noopener">哈希值</a>,一致即可,否则联系官方或者换一个安装包</p></li></ul></li></ul></li><li><p>03:安装到 py3.6</p><ul><li><code>bash ~/Downloads/Anaconda3-4.4.0-MacOSX-x86_64.sh</code></li></ul></li><li><p>04:跟随命令行提示操作</p><ul><li>确认 license 内容, yes</li><li>确认安装路径,enter</li><li>开始安装,需要等待一段时间</li><li>出现<code>Thank you for installing Anaconda3!</code>即安装成功</li></ul></li><li><p>05:用命令行运行 <code>conda</code></p><ul><li>在命令行中输入</li><li><code>$ export PATH=~/anaconda3/bin:$PATH</code><ul><li>Note: 根据下载版本不同路径不同,参考<a href="https://stackoverflow.com/questions/18675907/how-to-run-conda" target="_blank" rel="noopener">这里</a></li></ul></li><li>为了避免每次重启 shell 都要输入一次 <code>$ export PATH=~/anaconda3/bin:$PATH</code><ul><li><p>在 shell 的配置文件中输入该命令</p></li><li><p>不同 shell 配置文件名称不同</p></li><li><p>zsh 的配置文件为 <code>.zshrc</code></p></li><li><p>打开 <code>.zshrc</code></p><pre><code>      $ cd ~       $ vim .zshrc</code></pre></li><li><p><code>i</code>插入模式下输入 <code>export PATH=~/anaconda3/bin:$PATH</code></p></li><li><p>重启 shell 即可</p></li></ul></li></ul></li><li><p>06:验证是否安装成功</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ conda --version</span><br><span class="line">conda 4.3.21</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="3-使用-anaconda3">3. 使用 Anaconda3</h4><ul><li><a href="https://docs.continuum.io/anaconda/user-guide/getting-started" target="_blank" rel="noopener">Getting started</a></li></ul><blockquote><p>If you prefer to use a terminal window or command prompt, download the <a href="http://conda.pydata.org/docs/using/cheatsheet.html" target="_blank" rel="noopener">conda cheat sheet</a> , try the <a href="http://conda.pydata.org/docs/test-drive.html" target="_blank" rel="noopener">conda test drive</a> and learn more about <a href="http://conda.pydata.org/docs/using" target="_blank" rel="noopener">using conda</a>.</p></blockquote><ul><li><p>管理 conda</p> <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ conda info             <span class="comment"># 显示Anaconda的安装信息</span></span><br><span class="line">$ conda list             <span class="comment"># 现有环境下的包列表</span></span><br><span class="line">$ conda update conda     <span class="comment"># 更新 conda</span></span><br><span class="line">$ conda update anaconda  <span class="comment"># 更新当前环境下所有包(anaconda 上有的)</span></span><br></pre></td></tr></table></figure></li></ul><ul><li><p>管理 python 版本</p> <figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建新的环境</span></span><br><span class="line">$ conda create --prefix ~/py27 python=2.7</span><br><span class="line"><span class="comment"># 删除创建的环境</span></span><br><span class="line">$ conda remove --prefix ~/py27 --all</span><br><span class="line">or</span><br><span class="line">$ rm -rf ~/py27</span><br><span class="line"></span><br><span class="line"><span class="comment"># 激活某个环境</span></span><br><span class="line">$ <span class="built_in">source</span> activate ~/py27</span><br><span class="line"><span class="comment"># 退出激活的环境</span></span><br><span class="line">$ <span class="built_in">source</span> deactivate ~/py27</span><br></pre></td></tr></table></figure></li><li><p>管理 packages</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ conda search jupyter    # 查找包(jupyter)</span><br><span class="line">$ conda install jupyter   # 安装包(jupyter)</span><br><span class="line">$ jupyter-notebook        # 运行安装的包(jupyter)</span><br><span class="line"></span><br><span class="line"># 在特定环境下安装/卸载包</span><br><span class="line">$ conda install --prefix ~/py27 &lt;packagename&gt; &lt;packagename&gt;</span><br><span class="line">$ conda remove --prefix ~/py27 &lt;packagename&gt; &lt;packagename&gt;</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-使用-jupyter-notebook">4. 使用 Jupyter Notebook</h4><ul><li><p>Anaconda3 自带 Jupyter Notebook</p></li><li><p>运行 JN, 会自动读取当前文件目录</p></li><li><p>操作</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ jupyter-notebook # 运行</span><br><span class="line">control + C        # 完全退出</span><br></pre></td></tr></table></figure></li><li><p>快捷键(updating)</p><ul><li>cmd 模式</li><li>编辑 模式<ul><li>Basic navigation: <code>enter, shift-enter, up/k, down/j</code></li><li>Saving the notebook: <code>s</code></li><li>Change Cell types: <code>y, m, 1-6, t</code></li><li>Cell creation: <code>a, b</code></li><li>Cell editing: <code>x, c, v, d, z</code></li><li>Kernel operations: <code>i, 0 (press twice)</code></li></ul></li></ul></li><li><p>社会化分享</p><ul><li><a href="https://github.com/jupyter/nbviewer" target="_blank" rel="noopener">nbviewer</a></li></ul></li></ul><h3 id="error">Error</h3><h4 id="e1-anaconda3-下载成功后-无法在-cmd-中打开">E1: Anaconda3 下载成功后,无法在 cmd 中打开</h4><ul><li>错误信息<ul><li><code>zsh: command not found: conda</code></li><li><code>bash: command not found: conda</code></li></ul></li><li>分析<ul><li>应该是shell配置哪里没有到位</li></ul></li><li>搜索<ul><li>关键词: <code>bash: command not found: conda</code></li><li>方案01<ul><li><a href="https://stackoverflow.com/questions/18675907/how-to-run-conda" target="_blank" rel="noopener">python - How to run Conda? - Stack Overflow</a></li><li>输入 <code>$ export PATH=~/anaconda3/bin:$PATH</code></li><li>验证 <code>conda --version</code></li><li>成功 <code>conda 4.3.21</code></li></ul></li></ul></li></ul><h3 id="reference">Reference</h3><ul><li><a href="http://nbviewer.jupyter.org/github/jupyter/notebook/blob/master/docs/source/examples/Notebook/Notebook%20Basics.ipynb" target="_blank" rel="noopener">Jupyter Notebook Viewer</a></li></ul><h3 id="timelog">Timelog</h3><ul><li>170813 2h    chrome 下载失败2次,未断点续下,改用迅雷下载</li><li>170814 1h    安装 Anaconda3 &amp;  解决 E1</li><li>170814 1h    试验并撰写 anaconda 使用教程/命令表</li><li>170814 30m   Jupter Notebook 尝试</li></ul>]]></content>
      
      <categories>
          
          <category> Tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> notebook </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo 博客初创</title>
      <link href="/2017-08-08-BlogCreate/"/>
      <url>/2017-08-08-BlogCreate/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">启程</blockquote><a id="more"></a><h2 id="触发">触发</h2><p>--&gt;原来用 jekll 新建的博客,但是不满意:</p><ol><li>没有目录</li><li>发布不方便,标签系统</li><li>更换主题十分不便</li><li>另有原因:<a href="http://hui-wang.info/2016/01/25/%E5%BC%83Jekyll%E6%8A%95Hexo/" target="_blank" rel="noopener">弃Jekyll投Hexo</a></li></ol><p>--&gt;基于美观的强迫症,重新搭建 hexo 博客,主要参考:</p><ul><li><a href="http://blog.junyu.io/posts/0001-start-blog-with-hexo.html" target="_blank" rel="noopener">俊宇的搭建指南</a></li><li><a href="https://malekbenz.com/blog/2016/09/10/Create-Host-Blog-for-free-with-Hexo-Github" target="_blank" rel="noopener">Create and host your blog for free with hexo &amp; Github</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">开始使用 - NexT 使用文档</a></li><li><a href="http://uchuhimo.me/2017/04/11/genesis/" target="_blank" rel="noopener">如何使用 Hexo 和 GitHub Pages 搭建这个博客 | uchuhimo's blog</a></li></ul><h2 id="基本信息">基本信息</h2><ul><li>终端的使用</li><li>git , github 与 github pages 的使用</li><li>Hexo 基本知识<ul><li>安装步骤</li><li>目录体系与各部分文件作用</li></ul></li></ul><h2 id="创建步骤">创建步骤</h2><h3 id="1-git-与-hexo-本地环境的基本配置">1.Git 与 HEXO 本地环境的基本配置</h3><ul><li><a href="https://hexo.io/docs/index.html" target="_blank" rel="noopener">Hexo</a><ul><li>Requirement<ul><li>NODE.js<ul><li>mac 用 brew 安装: <code>brew install NODE.js</code></li><li>node/8.2.1</li><li><a href="https://zh.wikipedia.org/wiki/Npm" target="_blank" rel="noopener">npm</a> node 的包管理器</li></ul></li><li>GIT</li></ul></li><li>Install:<code>npm install -g hexo-cli</code></li></ul></li></ul><h3 id="2-测试本地环境与初步部署">2.测试本地环境与初步部署</h3><ul><li><p>跟随操作即可--&gt;<a href="https://malekbenz.com/blog/2016/09/10/Create-Host-Blog-for-free-with-Hexo-Github" target="_blank" rel="noopener">Create and host your blog for free with hexo &amp; Github</a></p></li><li><p>至此,基本的博客就创建好了.</p></li></ul><h3 id="3-主题更改与配置">3.主题更改与配置</h3><ul><li>选定 next 主题</li><li>参考:<ul><li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">开始使用 - NexT 使用文档</a></li><li><a href="http://uchuhimo.me/2017/04/11/genesis/" target="_blank" rel="noopener">如何使用 Hexo 和 GitHub Pages 搭建这个博客 | uchuhimo's blog</a></li></ul></li><li>说明<ul><li>npm 安装所需的插件</li><li>注册所需的功能的服务商账号</li><li>站点_config.yml与主题_config.yml的设置</li><li>跟随使用手册与教材操作即可</li></ul></li></ul><h2 id="问题解决">问题解决</h2><h3 id="q0-npm-install-g-hexo-cli安装失败">Q0:<code>npm install -g hexo-cli</code>安装失败</h3><ul><li>错误信息:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules/hexo-cli/node_modules/chokidar/node_modules/fsevents):</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: shasum check failed for /var/folders/bm/83t95m6s7db2ptdn7vbpjnn40000gn/T/npm-16913-293d8ae2/registry.npmjs.org/fsevents/-/fsevents-1.1.2.tgz</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: Expected: 3282b713fb3ad80ede0e9fcf4611b5aa6fc033f4</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: Actual:   ea4d74b23c04dac402fbefb7a1f011bd68d54ff0</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: From:     https://registry.npmjs.org/fsevents/-/fsevents-1.1.2.tgz</span><br><span class="line">npm ERR! Darwin 15.6.0</span><br><span class="line">npm ERR! argv &quot;/usr/local/bin/node&quot; &quot;/usr/local/bin/npm&quot; &quot;install&quot; &quot;-g&quot; &quot;hexo-cli&quot;</span><br><span class="line">npm ERR! node v7.1.0</span><br><span class="line">npm ERR! npm  v3.10.9</span><br><span class="line"></span><br><span class="line">npm ERR! shasum check failed for /var/folders/bm/83t95m6s7db2ptdn7vbpjnn40000gn/T/npm-16913-293d8ae2/registry.npmjs.org/bunyan/-/bunyan-1.8.12.tgz</span><br><span class="line">npm ERR! Expected: f150f0f6748abdd72aeae84f04403be2ef113797</span><br><span class="line">npm ERR! Actual:   e9afb754a0b23bae23162ab0d613c8ee505b52db</span><br><span class="line">npm ERR! From:     https://registry.npmjs.org/bunyan/-/bunyan-1.8.12.tgz</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! If you need help, you may report this error at:</span><br><span class="line">npm ERR!     &lt;https://github.com/npm/npm/issues&gt;</span><br></pre></td></tr></table></figure><ul><li><p>搜索:</p><ul><li><p><code>npm install -g hexo-cli failed</code></p><ul><li><a href="https://github.com/hexojs/hexo/issues/2597#issuecomment-306659340" target="_blank" rel="noopener">Failed to install hexo-cli on mac · Issue #2597 · hexojs/hexo</a></li></ul><blockquote><p>issue is with npm version 5+ I rolledback to npm@4.6.1 and was able to install hexo-cli without any issues.</p></blockquote></li></ul></li><li><p>尝试0:将 npm 版本退回4.6.1</p><ul><li><code>npm install -g npm@4.6.1</code></li><li>无效</li></ul></li><li><p>尝试1:</p><ul><li>npm doctor</li><li>npm install -g hexo-cli</li><li>成功:<ul><li>有可能是网咯的问题,多运行几次继续下载即可</li><li>npm doctor 生效</li></ul></li></ul></li></ul><h3 id="q1-error-with-dtrace-mac-os-x">Q1:Error with DTrace (Mac OS X)</h3><ul><li><p>错误信息:</p><ul><li><code>Error: Cannot find module './build/Debug/DTraceProviderBindings'</code></li><li>该错误不影响博客的正常使用,但是每运行一次 hexo 命令就会跑出来,十分难受.</li></ul></li><li><p>搜索0:直接google错误信息</p><ul><li>方案0:官方文档<ul><li><a href="https://hexo.io/docs/troubleshooting.html#Error-with-DTrace-Mac-OS-X" target="_blank" rel="noopener">Troubleshooting | Hexo</a></li><li>DTrace安装存在问题,因此重新安装简约版</li><li><code>$ npm install hexo --no-optional</code></li><li>直接安装或则卸载原来的 hexo <code>npm uninstall -g hexo-cli</code>再安装,均无效</li></ul></li><li>方案1:github issue<ul><li><p><a href="https://github.com/trentm/node-bunyan/issues/216#issuecomment-267756175" target="_blank" rel="noopener">Still getting lots of DtraceProviderBindings errors on OS X · Issue #216 · trentm/node-bunyan</a></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g build essential</span><br><span class="line">npm rebuild</span><br></pre></td></tr></table></figure></li><li><p>无效</p></li></ul></li><li>方案3:安装 dtrace-provider 模块<ul><li><a href="https://github.com/trentm/node-bunyan/issues/216#issuecomment-297492319" target="_blank" rel="noopener">Still getting lots of DtraceProviderBindings errors on OS X · Issue #216 · trentm/node-bunyan</a></li><li>npm install dtrace-provider</li><li>无效</li></ul></li><li>方案4:OS X EI 系统升级至 10.11.6<ul><li>在 app store 中更新</li><li>成功解决问题</li></ul></li></ul></li></ul><h2 id="日常操作">日常操作</h2><ol><li><p>命令简写</p><pre><code> $ hexo new == hexo n $ hexo generate == hexo g $ hexo server == hexo s $ hexo deploy == hexo d</code></pre></li><li><p>初始化</p><pre><code> $ hexo init [folder]  #初始化目录</code></pre></li><li><p>调试</p><pre><code> $ hexo clean      #清除缓存 $ hexo g          #生产静态文件至 public 目录 $ hexo s --debug  #启动本地服务器(调试模式)  $ hexo s --draft  #本地预览草稿         </code></pre></li><li><p>部署</p><pre><code> $ hexo clean     #清除缓存 $ hexo g         #生产静态文件至 public 目录 $ hexo d         #项目部署  $ hexo d -g      #先生成后部署</code></pre></li><li><p>写作</p><pre><code> $ hexo new [layout] &lt;title&gt;   # 新建文章 $ hexo new draft &lt;title&gt;      # 新建草稿 $ hexo publish &lt;title&gt;        # 草稿发布成文章</code></pre></li><li><p>其他</p><ul><li>首页文章显示摘要<ul><li>`<blockquote class="blockquote-center"> 摘要 </blockquote></li></ul></li></ul></li></ol><!--more-->`<pre><code>        - 添加在正文之前- 脚注/上标/下标/缩写    - form: [hexo-renderer-markdown-it](https://github.com/hexojs/hexo-renderer-markdown-it/blob/master/README.md)     - `&lt;sub&gt;` H&lt;sub&gt;2&lt;/sub&gt;O     - `&lt;sup&gt;` x&lt;sup&gt;2&lt;/sup&gt;     - `&lt;ins&gt;` &lt;ins&gt;Inserted&lt;/ins&gt;     - Footnotes `^[1]`</code></pre><h2 id="timelog">TimeLog</h2><ul><li>170708 NBR-hugh publish</li><li>170707 NBR-hugh init</li></ul>]]></content>
      
      <categories>
          
          <category> Tool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
